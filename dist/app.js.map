{"version":3,"sources":["../server/app.js"],"names":["express","require","env","routes","database","bodyParser","authenticated","async","app","cors","path","use","json","static","join","__dirname","server","createServer","urlencoded","extended","req","res","next","allowedOrigins","origin","headers","console","log","indexOf","setHeader","header","listen","Api_port"],"mappings":"AAAA,IAAIA,UAASC,QAAQ,SAAR,CAAb;AACA,IAAIC,MAAKD,QAAQ,OAAR,CAAT;AACA,IAAIE,SAAQF,QAAQ,UAAR,CAAZ;AACA,IAAIG,WAASH,QAAQ,eAAR,CAAb;AACA,IAAII,aAAYJ,QAAQ,aAAR,CAAhB;AACA,IAAIK,gBAAeL,QAAS,6BAAT,CAAnB;AACA,IAAIM,QAAON,QAAS,OAAT,CAAX;AACA,MAAMO,MAAMR,SAAZ;AACA,IAAIS,OAAKR,QAAQ,MAAR,CAAT;;AAEA,IAAIS,OAAOT,QAAQ,MAAR,CAAX;;AAEAO,IAAIG,GAAJ,CAAQF,MAAR;AACAD,IAAIG,GAAJ,CAAQN,WAAWO,IAAX,EAAR;AACA;AACAJ,IAAIG,GAAJ,CAAQX,QAAQa,MAAR,CAAeH,KAAKI,IAAL,CAAUC,SAAV,EAAoB,aAApB,CAAf,CAAR;;AAIA,IAAIC,SAASf,QAAQ,MAAR,EAAgBgB,YAAhB,CAA6BT,GAA7B,CAAb;AACAA,IAAIG,GAAJ,CAAQN,WAAWa,UAAX,CAAsB;AAC5BC,YAAU;AADkB,CAAtB,CAAR;AAGAX,IAAIG,GAAJ,CAAQN,WAAWO,IAAX,EAAR;AACAJ,IAAIG,GAAJ,CAAQX,QAAQa,MAAR,CAAe,QAAf,CAAR;AACAL,IAAIG,GAAJ,CAAQ,UAAUS,GAAV,EAAeC,GAAf,EAAoBC,IAApB,EAA0B;;AAEhC;;;AAGA,MAAIC,iBAAiB,CAAC,2BAAD,EAA6B,0BAA7B,EAAwD,uBAAxD,CAArB;AACA,MAAIC,SAASJ,IAAIK,OAAJ,CAAYD,MAAzB;AACAE,UAAQC,GAAR,CAAY,kBAAZ,EAA+BH,MAA/B;;AAEA,MAAGD,eAAeK,OAAf,CAAuBJ,MAAvB,IAAiC,CAAC,CAArC,EAAuC;AACrCE,YAAQC,GAAR,CAAY,qBAAZ,EAAkCH,MAAlC;;AAEGH,QAAIQ,SAAJ,CAAc,6BAAd,EAA6CL,MAA7C;AACJ;AACD;;AAEA;AACAH,MAAIQ,SAAJ,CAAc,8BAAd,EAA8C,wCAA9C;;AAEA;AACA;AACAR,MAAIS,MAAJ,CAAW,8BAAX,EAA2C,6BAA3C;;AAGA;AACA;AACAT,MAAIQ,SAAJ,CAAc,kCAAd,EAAkD,IAAlD;;AAEA;AACAP;AACD,CA9BD;AA+BA;AACA;AACAnB,OAAOK,GAAP;AACA;AACAQ,OAAOe,MAAP,CAAc7B,IAAI8B,QAAlB,EAA4B,MAAM;AAChCN,UAAQC,GAAR,CAAa,yBAAwBzB,IAAI8B,QAAS,GAAlD;AACD,CAFD","file":"app.js","sourcesContent":["var express =require('express');\nvar env =require('./env');\nvar routes =require('./routes');\nvar database=require('./database/db')\nvar bodyParser =require('body-parser');\nvar authenticated =require( './middlewares/authenticated');\nvar async =require( 'async');\nconst app = express();\nvar cors=require('cors')\n\nvar path = require('path');\n\napp.use(cors())\napp.use(bodyParser.json())\n// app.use(express.static(path.join(__dirname,'../dist')))\napp.use(express.static(path.join(__dirname,'../frontend')))\n\n\n\nvar server = require('http').createServer(app);\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\napp.use(bodyParser.json());\napp.use(express.static('client'))\napp.use(function (req, res, next) {\n\n  // Website you wish to allow to connect\n\n\n  var allowedOrigins = ['http://192.168.0.107:4200','http://192.168.0.10:4200','http://localhost:4200'];\n  var origin = req.headers.origin;\n  console.log(\"Request orign==>\",origin);\n\n  if(allowedOrigins.indexOf(origin) > -1){\n    console.log(\"allow orign true==>\",origin);\n    \n       res.setHeader('Access-Control-Allow-Origin', origin);\n  }\n  // res.setHeader('Access-Control-Allow-Origin', 'http://localhost:4200');\n\n  // Request methods you wish to allow\n  res.setHeader('Access-Control-Allow-Methods', 'GET, POST, OPTIONS, PUT, PATCH, DELETE');\n\n  // Request headers you wish to allow\n  // res.setHeader('Access-Control-Allow-Headers', 'X-Requested-With,content-type');\n  res.header('Access-Control-Allow-Headers', 'Content-Type, Authorization');\n\n\n  // Set to true if you need the website to include cookies in the requests sent\n  // to the API (e.g. in case you use sessions)\n  res.setHeader('Access-Control-Allow-Credentials', true);\n\n  // Pass to next layer of middleware\n  next();\n});\n// app.use('/users', authenticated);\n// app.use('/users/*', authenticated);\nroutes(app);\n// require('./controller/messagesController')(app, io);\nserver.listen(env.Api_port, () => {\n  console.log(`Api listening on port ${env.Api_port}!`);\n});"]}
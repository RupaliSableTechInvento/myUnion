{"version":3,"sources":["../../server/controller/adminController.js"],"names":["adminModel","require","usersModel","tokenModel","companyModel","electionDetailsModel","userElectionModel","fightingFundModel","jwt","env","mongoose","encode","hashCode","generator","axios","search","refference_code","refference_codeArray","i","length","code","adminController","login","req","res","next","body","password","value","credential","console","log","findOne","$and","phone_no","err","admin","json","d","Date","v","setMinutes","getMinutes","token1","sign","role","expiry","App_key","decoded","verify","token","currentTime","token2","isActive","adminActiveTime","findOneAndUpdate","$set","data","isError","create","sucess","register","account_created","save","user","registerUser","authorization","passwordGenerated","generate","numbers","userMsg","isCompanyValid","isDeptartmentValid","isRefference_codeValid","company_name","department_name","company","isRefferenceCodeFound","isDeptartmentFound","dataRes","department","deptDataForVoting","key","deptData","count","updateQuery","toString","error","get","trim","then","response","update","$elemMatch","result","nModified","catch","createElection","election_name","election_date","election_created","electionDetails","success","candidateReq","find","isApprove","userElection","approveCandidateReq","_id","Types","ObjectId","emplID","dataObj","candidate","support","query","$push","candidateData","options","new","approveTransactionReq","accountNo","transactionApprove","userApprove","upsert","deActivateUser","sort","setActiveUser","deactiveCandidate","addNotice","html","writeHead","end","module","exports"],"mappings":"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","file":"adminController.js","sourcesContent":["var adminModel=require( '../models/adminModel')\r\nvar usersModel =require( './../models/usersModel');\r\nvar tokenModel =require( './../models/tokenModel');\r\nvar companyModel =require( '../models/companyModel');\r\nvar electionDetailsModel=require('../models/electionDetailsModel');\r\nvar userElectionModel=require('../models/userElectionModel');\r\nvar fightingFundModel=require('./../models/fightingFundModel')\r\n\r\nvar jwt =require( 'jsonwebtoken');\r\nvar env =require( \"../env\");\r\nvar mongoose = require('mongoose');\r\nvar encode = require('hashcode').hashCode;\r\nvar generator = require('generate-password');\r\nconst axios = require('axios');\r\nfunction search(refference_code, refference_codeArray){\r\n  for (var i=0; i < refference_codeArray.length; i++) {\r\n      if (refference_codeArray[i].code === refference_code) {\r\n          return true;\r\n      }\r\n      if (i>refference_codeArray.length) {\r\n\r\n         return false;\r\n      }\r\n      \r\n  }\r\n}\r\n\r\nconst adminController = {\r\n    \r\n    login: (req, res, next) => {\r\n        req.body.password = encode().value(req.body.password);\r\n        const credential = req.body;\r\n        console.log(\"admin Login Credential==>\",credential);\r\n        \r\n        adminModel.findOne({ $and: [ {phone_no: credential.phone_no }, { password: credential.password} ] }\r\n          , (err, admin) => {\r\n          if (err) res.json(err);\r\n          if (admin) {\r\n            console.log(\"admin=>\", admin)\r\n            var d = new Date();\r\n            var v = new Date();\r\n            v.setMinutes(d.getMinutes() + 10);\r\n            const token1 = jwt.sign({\r\n              phone_no:admin.phone_no,\r\n              role:'admin',\r\n              expiry: v\r\n            }, env.App_key);\r\n            var decoded = jwt.verify(token1, env.App_key);\r\n            console.log(\"decoded reqest from==>\", decoded.role)\r\n            let token = new tokenModel();\r\n            var currentTime = new Date();\r\n            var token2 = {\r\n              token: token1,\r\n              phone_no: admin.phone_no,\r\n              isActive: \"active\",\r\n              expiry: v,\r\n              adminActiveTime: currentTime\r\n            };\r\n            tokenModel.findOneAndUpdate({\r\n              $and: [{\r\n                phone_no: admin.phone_no\r\n              }, {\r\n                isActive: \"active\"\r\n              }]\r\n            }, {\r\n              $set: {\r\n                isActive: \"inactive\"\r\n              }\r\n            }, (err, data) => {\r\n              if (err) return res.json({\r\n                isError: true,\r\n                data: err\r\n              });\r\n              else {\r\n                console.log(\"tokenModel.findOneAndUpdate else\",data,credential.phone_no);  \r\n                tokenModel.create(token2, function(err, token) {\r\n                  if (err) return res.json({\r\n                    isError: true,\r\n                    data: token1,\r\n                    });\r\n                  res.json({\r\n                    sucess: true,\r\n                    data: token1,\r\n                  });\r\n                })\r\n              }\r\n            })     \r\n          } \r\n          else {\r\n            console.log(\"admin Login Error==>\",err,admin,adminModel);  \r\n            res.json({\r\n              isError: true,\r\n              data: \"Not a admin !\"\r\n            })\r\n          }\r\n        });\r\n    \r\n      },\r\n    register: (req, res, next) => {\r\n        console.log(\"admin  register\", req.body)\r\n        var account_created = new Date();\r\n        if (req.body.password != \"\" && req.body.password.length > 6) {\r\n          req.body.password = encode().value(req.body.password);\r\n          let admin = new adminModel(req.body);\r\n          req.body.account_created = account_created;\r\n    \r\n          console.log(\"Account Created==>\", account_created);\r\n          admin.save(req.body, function(err, user) {\r\n            if (err) return res.json({\r\n              isError: true,\r\n              data: err,\r\n              });\r\n              res.json({\r\n                sucess: true,\r\n                data: user,\r\n                })\r\n          })\r\n        } else {\r\n          res.json({\r\n            isError: true,\r\n            data: 'invalid Password',\r\n            })\r\n        }\r\n      },\r\n    registerUser: (req, res, next) => {\r\n\r\n        console.log(\"  register User\", req.body)\r\n        var token1=  req.body.authorization;\r\n       var decoded = jwt.verify(token1, env.App_key);\r\n       console.log(\"decoded reqest from==>\", decoded.role)\r\n   \r\n       if (decoded.role=='admin') {  \r\n        var account_created = new Date();\r\n        var passwordGenerated = generator.generate({\r\n          length: 6,\r\n          numbers: true\r\n        });\r\n    \r\n        var phone_no=req.body.phone_no;\r\n        var userMsg='Congrats you are succesfully registerd for My union. Your password :'+passwordGenerated;\r\n      req.body.password = encode().value(passwordGenerated);\r\n      req.body.account_created = account_created;\r\n\r\n      var isCompanyValid=false;\r\n      var isDeptartmentValid=false;\r\n      var isRefference_codeValid=false;\r\n      var isCompanyValid=(req.body.company_name.length>0)?true:false;\r\n      var isDeptartmentValid=(req.body.department_name.length>0)?true:false;\r\n      var isRefference_codeValid=(req.body.refference_code.length>0)?true:false;\r\n\r\n\r\n      console.log(\"Account Created==>\", account_created,isCompanyValid,isDeptartmentValid,isRefference_codeValid);\r\n\r\n      if ((isCompanyValid)&&(isDeptartmentValid)&&(isRefference_codeValid)) {\r\n        var company_name=req.body.company_name;\r\n        var department_name=req.body.department_name;\r\n        var refference_code=req.body.refference_code;\r\n          companyModel.findOne({'company_name':company_name},function (err,company) {\r\n        if (company) {\r\n\r\n          var isRefferenceCodeFound=false;\r\n          var isDeptartmentFound=false;\r\n          var refference_codeArray=[];\r\n          refference_codeArray=company.refference_code;\r\n          console.log(\"department in comapny==>\",refference_codeArray,refference_code);\r\n          \r\n\r\n          var dataRes = company.department;\r\n          var deptDataForVoting={\r\n\r\n          }\r\n           console.log(\" Company data==>\",  dataRes);\r\n\r\n          for (var key in dataRes) {\r\n            console.log(\"key==>\",key);\r\n           var deptData={\r\n             count:0\r\n           }\r\n            var updateQuery = 'deptDataForVoting.' + key;\r\n            deptDataForVoting[key] = deptData;\r\n            \r\n            if (key.toString() == department_name.toString()) {\r\n              isDeptartmentFound=true;\r\n              var isRefferenceCodeFound = search(refference_code, refference_codeArray);\r\n              console.log(\"department and reff code found ==>\",isDeptartmentFound,isRefferenceCodeFound);\r\n            }\r\n\r\n          }\r\n\r\n          if (isDeptartmentFound&&isRefferenceCodeFound ) {\r\n            console.log(\"valid Data==>\",deptDataForVoting);\r\n            req.body.deptDataForVoting=deptDataForVoting;\r\n             let user = new usersModel(req.body);\r\n               user.save(req.body, function(err, user) {\r\n                if (err) {\r\n                  console.log(\"Error in user save\",err,user);\r\n                  \r\n                    res.json({\r\n                    isError: true,\r\n                    error: err\r\n                  });\r\n                } \r\n               \r\n\r\n                else{\r\n                  axios.get('http://sms.swebsolutions.in/api/mt/SendSMS?user=WEBSOLUTION&password=swsmymv*13&senderid=SWSCOM&channel=Trans&DCS=0&flashsms=0&number='+ phone_no.trim() +'&text= '+ userMsg+'&route=6')\r\n                  .then(response => {\r\n                    \r\n                    companyModel.update({\r\n                      $and: [{ company_name: company_name }, { refference_code: { $elemMatch: { 'code': refference_code } } }]\r\n                \r\n                    }, { $set: { \"refference_code.$.isactive\": true } }, function(err, result) {\r\n                      if (result.nModified) {\r\n\r\n                        console.log(\"refference code modified-->\",result);\r\n                        \r\n                \r\n                        res.json({\r\n                          sucess: true,\r\n                          data: user\r\n                        });\r\n\r\n                      }\r\n                    })\r\n                  \r\n\r\n                  })\r\n                  .catch(error => {\r\n                    console.log(error);\r\n                  });\r\n\r\n\r\n                }\r\n              })\r\n          }\r\n          \r\n        }\r\n        else{\r\n          res.json({\r\n            isError: true,\r\n            data: 'Company not found'\r\n          });\r\n        }\r\n        \r\n      })\r\n      }\r\n      else{\r\n        res.json({\r\n          isError: true,\r\n          data: 'please provide required fields'\r\n        });\r\n      }\r\n       }\r\n       else{\r\n        res.json({\r\n          isError: true,\r\n          error: 'Unauthorized Access'\r\n        });\r\n       }\r\n        \r\n      },\r\n    createElection:(req,res,next)=>{\r\n        var token1=  req.body.authorization;\r\n        var decoded = jwt.verify(token1, env.App_key);\r\n        console.log(\"decoded reqest from==>\", decoded.role)\r\n    \r\n        if (decoded.role=='admin') {\r\n          var election_name=req.body.election_name;\r\n         req.body.election_date=new Date(req.body.election_date);\r\n\r\n        req.body.election_created=new Date();\r\n          let electionDetails = new electionDetailsModel(req.body);\r\n          electionDetails.save(req.body, function(err, electionDetails) {\r\n            if (err) {\r\n              res.json({\r\n                isError: true,\r\n                data: err\r\n              });\r\n              \r\n            } else {\r\n              res.json({\r\n                success: true,\r\n                data: electionDetails\r\n              });\r\n            }\r\n\r\n          })\r\n\r\n        }\r\n        else{\r\n          res.json({\r\n            isError: true,\r\n            error: 'Unauthorized Access'\r\n          });\r\n         }\r\n\r\n\r\n    },\r\n    candidateReq:(req,res,next)=>{\r\n      var token1=  req.body.authorization;\r\n      var decoded = jwt.verify(token1, env.App_key);\r\n      console.log(\"decoded reqest from==>\", decoded.role)\r\n  \r\n      if (decoded.role=='admin') { \r\n        userElectionModel.find({\r\n          $and:[\r\n            {election_name:req.body.election_name},\r\n            {isApprove:false}\r\n          ]\r\n        },function (err,userElection) {\r\n          if (err) {\r\n            res.json({\r\n              isError: true,\r\n              data: err,\r\n              })\r\n            \r\n          } else {\r\n            if (userElection) {\r\n            \r\n                res.json({\r\n                  sucess: true,\r\n                  data: userElection,\r\n                  })\r\n            \r\n            \r\n            }\r\n            else{\r\n              res.json({\r\n                isError: true,\r\n                data: \"No Data Found\",\r\n                })\r\n            }\r\n           \r\n          }\r\n          \r\n        })\r\n\r\n\r\n      }\r\n      else{\r\n        res.json({\r\n          isError:true,\r\n          error:'Unauthorized access'\r\n        })\r\n      }\r\n      \r\n    },\r\n    approveCandidateReq:(req,res,next)=>{\r\n      var token1=  req.body.authorization;\r\n      var decoded = jwt.verify(token1, env.App_key);\r\n      console.log(\"decoded reqest from==>\", decoded.role)\r\n      var _id=req.body._id;\r\n      if (decoded.role=='admin') { \r\n        userElectionModel.findOneAndUpdate({_id:mongoose.Types.ObjectId(_id)},\r\n        {\r\n          $set:\r\n            {isApprove:true}\r\n          \r\n        },function (err,userElection) {\r\n          if (err) {\r\n            res.json({\r\n              isError: true,\r\n              data: err\r\n            })\r\n            \r\n          } else {\r\n            console.log(userElection);\r\n            \r\n            var election_name=userElection.election_name;\r\n            var emplID=userElection._id\r\n            var dataObj={\r\n              candidate:_id,\r\n              support:0\r\n            }\r\n\r\n            query = {election_name:election_name},\r\n            update = {  \r\n              $push: { candidateData: dataObj } \r\n            },\r\n            options = {new: true};\r\n            electionDetailsModel.findOneAndUpdate(query,update,options,function (error,electionDetails) {\r\n              if (error) {\r\n                res.json({\r\n                  isError: true,\r\n                  data: error\r\n                })\r\n                \r\n              } else {\r\n                res.json({\r\n                  success: true,\r\n                  data: {userElection:userElection,electionDetails:electionDetails}\r\n                })\r\n                \r\n              }\r\n            })\r\n         \r\n          }\r\n          \r\n        })\r\n      }\r\n      else{\r\n        res.json({\r\n          isError:true,\r\n          data:'Unauthorised Access'\r\n        })\r\n      }\r\n\r\n    },\r\n    approveTransactionReq:(req,res,next)=>{\r\n      var token1=  req.body.authorization;\r\n      var decoded = jwt.verify(token1, env.App_key);\r\n      var _id=req.body._id;\r\n      var phone_no= req.body.phone_no;\r\n      var accountNo=req.body.accountNo;\r\n      console.log(\"decoded reqest from==>\", decoded.role,accountNo)\r\n\r\n      if (decoded.role=='admin') { \r\n        usersModel.findOneAndUpdate({phone_no:phone_no},\r\n        {\r\n          $set:\r\n            {transactionApprove:true}\r\n          \r\n        },function (err,userApprove) {\r\n          if (err) {\r\n            res.json({\r\n              isError: true,\r\n              data: err\r\n            })\r\n            \r\n          } else {\r\n            var userMsg='Transaction  Request Approve for user :'+phone_no;\r\n            var dataObj={\r\n              user:phone_no\r\n            }\r\n                      \r\n          axios.get('http://sms.swebsolutions.in/api/mt/SendSMS?user=WEBSOLUTION&password=swsmymv*13&senderid=SWSCOM&channel=Trans&DCS=0&flashsms=0&number='+ decoded.phone_no +'&text= '+ userMsg+'&route=6')\r\n          .then(response => {\r\n            if (response) {\r\n              if (accountNo) {\r\n                fightingFundModel.findOneAndUpdate({accountNo:accountNo},{ $push: {'user': dataObj } }, {\r\n                  upsert: true\r\n                },function (err,result) {\r\n                  if (err) {\r\n                    res.json({\r\n                      isError: true,\r\n                      data:err\r\n                    });\r\n                  \r\n                    \r\n                  }\r\n                  else{\r\n                    res.json({\r\n                      success: true,\r\n                      data:'request Approve for '+phone_no\r\n                    });\r\n                  }\r\n                 \r\n                \r\n                })\r\n              }\r\n              else{\r\n                \r\n              res.json({\r\n                isError: true,\r\n                data:'Invalid Account'\r\n              });\r\n              }\r\n             \r\n\r\n              \r\n            }\r\n\r\n            \r\n          })\r\n          .catch(error => {\r\n            res.json({\r\n           isError: true,\r\n           error: error\r\n         });\r\n          });\r\n\r\n         \r\n          }\r\n          \r\n        })\r\n      }\r\n      else{\r\n        res.json({\r\n          isError:true,\r\n          data:'Unauthorised Access'\r\n        })\r\n      }\r\n    },\r\n    deActivateUser:(req,res,next)=>{\r\n      var phone_no=req.body.phone_no;\r\n      var token1=  req.body.authorization;\r\n      var decoded = jwt.verify(token1, env.App_key);\r\n      console.log(\"decoded reqest from==>\", decoded.role)\r\n  \r\n      if (decoded.role=='admin') { \r\n        usersModel.findOneAndUpdate({phone_no:phone_no},{$set:{isActive:false}},function (err,result) {\r\n          if (err) {\r\n            res.json({\r\n              isError:true,\r\n              error:err\r\n            })\r\n            \r\n          } else {\r\n            tokenModel.findOneAndUpdate({phone_no:phone_no},{ sort: { 'expiry' : -1 } },{$set:{isActive:false}},{new:true},function (error,data) {\r\n             \r\n             if (error) {\r\n              res.json({\r\n                isError:true,\r\n                err:error\r\n              })\r\n             } else {\r\n              res.json({\r\n                success:true,\r\n                data:data\r\n              })\r\n             }\r\n             \r\n            \r\n            })\r\n          }\r\n         \r\n        })\r\n      }\r\n      else{\r\n        res.json({\r\n          isError:true,\r\n          error:'Unauthorized access'\r\n        })\r\n\r\n      }\r\n     \r\n\r\n    },\r\n    setActiveUser:(req,res,next)=>{\r\n      var phone_no=req.body.phone_no;\r\n      var token1=  req.body.authorization;\r\n      var decoded = jwt.verify(token1, env.App_key);\r\n      console.log(\"decoded reqest from==>\", decoded.role)\r\n  \r\n      if (decoded.role=='admin') { \r\n        usersModel.findOneAndUpdate({phone_no:phone_no},{$set:{isActive:true}},function (err,result) {\r\n          if (err) {\r\n            res.json({\r\n              isError:true,\r\n              error:err\r\n            })\r\n            \r\n          } else {\r\n          \r\n              res.json({\r\n                success:true,\r\n                data:result\r\n              })\r\n          \r\n          }\r\n         \r\n        })\r\n      }\r\n      else{\r\n        res.json({\r\n          isError:true,\r\n          error:'Unauthorized access'\r\n        })\r\n\r\n      }\r\n     \r\n\r\n    },\r\n    deactiveCandidate:(req,res,next)=>{\r\n      \r\n    },\r\n    addNotice:(req,res,next)=>{\r\n      var token1=  req.body.authorization;\r\n      var decoded = jwt.verify(token1, env.App_key);\r\n      console.log(\"decoded reqest from==>\", decoded.role)\r\n   \r\n      if (decoded.role=='admin') { \r\n        var html=`This is a notice...  Important to share with you..`;\r\n        res.writeHead(200, {'Content-Type': 'text/html'});\r\n        res.end(html);\r\n\r\n        // res.json({\r\n        //   success:true,\r\n        //   data:html\r\n        // })\r\n\r\n\r\n      }\r\n      else{\r\n        res.json({\r\n          isError:true,\r\n          error:'Unauthorized access'\r\n        })\r\n      }\r\n    }\r\n  \r\n  \r\n   \r\n};\r\n\r\nmodule.exports= adminController;"]}
{"version":3,"sources":["../../server/controller/adminController.js"],"names":["adminModel","require","usersModel","tokenModel","companyModel","electionDetailsModel","userElectionModel","noticeModel","fightingFundModel","jwt","env","mongoose","encode","hashCode","generator","axios","search","refference_code","refference_codeArray","i","length","code","adminController","login","req","res","next","body","password","value","credential","console","log","query","$and","phone_no","findOne","err","admin","json","d","Date","v","setMinutes","getMinutes","token1","sign","role","expiry","App_key","decoded","verify","token","currentTime","token2","isActive","adminActiveTime","findQuery","updateQuery","$set","options","new","findOneAndUpdate","data","isError","create","sucess","register","account_created","save","user","registerUser","authorization","company_name","department_name","find","company","dataRes","department","deptDataOfVoting","key","deptData","count","isRefferenceCodeFound","hasOwnProperty","passwordGenerated","generate","numbers","userMsg","get","trim","then","response","update","$elemMatch","result","nModified","catch","error","createElection","election_date","election_created","electionDetails","success","candidateReq","election_name","isApprove","userElection","approveCandidateReq","_id","Types","ObjectId","emplID","dataObj","candidate","support","$push","candidateData","approveTransactionReq","accountNo","transactionApprove","userApprove","upsert","deActivateUser","sort","setActiveUser","deactiveCandidate","$pull","addNotice","publishOn","notice","module","exports"],"mappings":"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","file":"adminController.js","sourcesContent":["var adminModel=require( '../models/adminModel')\r\nvar usersModel =require( './../models/usersModel');\r\nvar tokenModel =require( './../models/tokenModel');\r\nvar companyModel =require( '../models/companyModel');\r\nvar electionDetailsModel=require('../models/electionDetailsModel');\r\nvar userElectionModel=require('../models/userElectionModel');\r\nvar noticeModel=require('../models/noticeModel')\r\nvar fightingFundModel=require('./../models/fightingFundModel')\r\n\r\nvar jwt =require( 'jsonwebtoken');\r\nvar env =require( \"../env\");\r\nvar mongoose = require('mongoose');\r\nvar encode = require('hashcode').hashCode;\r\nvar generator = require('generate-password');\r\nconst axios = require('axios');\r\nfunction search(refference_code, refference_codeArray){\r\n  for (var i=0; i < refference_codeArray.length; i++) {\r\n      if (refference_codeArray[i].code === refference_code) {\r\n          return true;\r\n      }\r\n      if (i>refference_codeArray.length) {\r\n\r\n         return false;\r\n      }\r\n      \r\n  }\r\n}\r\n\r\nconst adminController = {\r\n    \r\n    login: (req, res, next) => {\r\n        req.body.password = encode().value(req.body.password);\r\n        const credential = req.body;\r\n        console.log(\"admin Login Credential==>\",credential);\r\n        \r\n        var query={\r\n          $and: [ {phone_no: credential.phone_no }, { password: credential.password} ] \r\n        }\r\n        adminModel.findOne(\r\n          query, (err, admin) => {\r\n          if (err) res.json(err);\r\n          if (admin) {\r\n            console.log(\"admin=>\", admin)\r\n            var d = new Date();\r\n            var v = new Date();\r\n            v.setMinutes(d.getMinutes() + 10);\r\n            const token1 = jwt.sign({\r\n              phone_no:admin.phone_no,\r\n              role:'admin',\r\n              expiry: v\r\n            }, env.App_key);\r\n            var decoded = jwt.verify(token1, env.App_key);\r\n            console.log(\"decoded reqest from==>\", decoded.role)\r\n            let token = new tokenModel();\r\n            var currentTime = new Date();\r\n            var token2 = {\r\n              token: token1,\r\n              phone_no: admin.phone_no,\r\n              isActive: \"active\",\r\n              expiry: v,\r\n              adminActiveTime: currentTime\r\n            };\r\n            var findQuery={\r\n              $and: [{\r\n                phone_no: admin.phone_no\r\n              }, {\r\n                isActive: \"active\"\r\n              }]\r\n            }\r\n            var updateQuery= {\r\n              $set: {\r\n                isActive: \"inactive\"\r\n              }\r\n            }\r\n            var options={\r\n              new :true\r\n            }\r\n            tokenModel.findOneAndUpdate(findQuery,updateQuery,options, (err, data) => {\r\n              if (err) return res.json({\r\n                isError: true,\r\n                data: err\r\n              });\r\n              else {\r\n                console.log(\"tokenModel.findOneAndUpdate else\",data,credential.phone_no);  \r\n                tokenModel.create(token2, function(err, token) {\r\n                  if (err) return res.json({\r\n                    isError: true,\r\n                    data: token1,\r\n                    });\r\n                  res.json({\r\n                    sucess: true,\r\n                    data: token1,\r\n                  });\r\n                })\r\n              }\r\n            })     \r\n          } \r\n          else {\r\n            console.log(\"admin Login Error==>\",err,admin,adminModel);  \r\n            res.json({\r\n              isError: true,\r\n              data: \"Not a admin !\"\r\n            })\r\n          }\r\n        });\r\n    \r\n      },\r\n    register: (req, res, next) => {\r\n        console.log(\"admin  register\", req.body)\r\n        var account_created = new Date();\r\n    \r\n          req.body.password = encode().value(req.body.password);\r\n          let admin = new adminModel(req.body);\r\n          req.body.account_created = account_created;\r\n    \r\n          console.log(\"Account Created==>\", account_created);\r\n          admin.save(req.body, function(err, user) {\r\n            if (err) return res.json({\r\n              isError: true,\r\n              data: err,\r\n              });\r\n              res.json({\r\n                sucess: true,\r\n                data: user,\r\n                })\r\n          })\r\n       \r\n      },\r\n    registerUser: (req, res, next) => {\r\n\r\n        console.log(\"  register User\", req.body)\r\n        var token1=  req.body.authorization;\r\n       var decoded = jwt.verify(token1, env.App_key);\r\n       console.log(\"decoded reqest from==>\", decoded.role)\r\n   \r\n       if (decoded.role=='admin') {  \r\n        var account_created = new Date();\r\n        var company_name=req.body.company_name;\r\n        var department_name=req.body.department_name;\r\n        var refference_code=req.body.refference_code;\r\n        var findQuery={\r\n\r\n            'company_name':company_name\r\n        }\r\n        console.log(\"Find Query==>\",findQuery);       \r\n          companyModel.find(findQuery,async function(err,company) {\r\n           if (company) {\r\n             console.log(\"Company found==>\",company);\r\n          var refference_codeArray=[];\r\n          refference_codeArray=company[0].refference_code;\r\n          var dataRes = company[0].department;\r\n          var deptDataOfVoting={}\r\n           console.log(\" Company data==>\",  dataRes)\r\n          for (var key in dataRes) {\r\n            console.log(\"key==>\",key);\r\n           var deptData={\r\n             count:0\r\n           }\r\n            deptDataOfVoting[key] = deptData;  \r\n          }\r\n         var isRefferenceCodeFound =await search(refference_code, refference_codeArray);\r\n          if (await isRefferenceCodeFound ) {\r\n           \r\n            req.body.deptDataOfVoting=deptDataOfVoting;\r\n            console.log(\"valid Data==>\",req.body);   \r\n            if (req.body.deptDataOfVoting.hasOwnProperty(department_name)) {\r\n              console.log(\"deptDataOfVoting==>\",req.body.deptDataOfVoting);\r\n              var passwordGenerated = generator.generate({\r\n                  length: 6,\r\n                  numbers: true\r\n                });\r\n                var phone_no=req.body.phone_no;\r\n                var userMsg='Congrats you are succesfully registerd for My union. Your password :'+passwordGenerated;\r\n              req.body.password = encode().value(passwordGenerated);\r\n              req.body.account_created = account_created;\r\n\r\n              let user = new usersModel(req.body);\r\n              user.save(req.body, function(err, user) {\r\n                if (err) {\r\n                  console.log(\"Error in user save\",err,user);\r\n                  \r\n                    res.json({\r\n                    isError: true,\r\n                    data: err\r\n                  });\r\n                } \r\n               \r\n                else{\r\n                  axios.get('http://sms.swebsolutions.in/api/mt/SendSMS?user=WEBSOLUTION&password=swsmymv*13&senderid=SWSCOM&channel=Trans&DCS=0&flashsms=0&number='+ phone_no.trim() +'&text= '+ userMsg+'&route=6')\r\n                  .then(response => {\r\n                    \r\n                    companyModel.update({\r\n                      $and: [{ company_name: company_name }, { refference_code: { $elemMatch: { 'code': refference_code } } }]\r\n                \r\n                    }, { $set: { \"refference_code.$.isactive\": true } }, function(err, result) {\r\n                      if (result.nModified) {\r\n\r\n                        console.log(\"refference code modified-->\",result);\r\n                        \r\n                \r\n                        res.json({\r\n                          sucess: true,\r\n                          data: user\r\n                        });\r\n\r\n                      }\r\n                    })\r\n                  \r\n\r\n                  })\r\n                  .catch(error => {\r\n                    console.log(error);\r\n                  });\r\n                }\r\n              })\r\n            } else {\r\n              res.json({\r\n                isError: true,\r\n                data: 'Departement not found'\r\n              });\r\n            }\r\n              \r\n          }\r\n          else {\r\n            console.log(\"Not found==>\",isRefferenceCodeFound);\r\n            \r\n            res.json({\r\n              isError: true,\r\n              data: 'match not found'\r\n            });\r\n          }\r\n          \r\n        }\r\n        else{\r\n          res.json({\r\n            isError: true,\r\n            data: 'Company not found'\r\n          });\r\n        }\r\n        \r\n          })\r\n        \r\n       }\r\n       else{\r\n        res.json({\r\n          isError: true,\r\n          data: 'Unauthorized Access'\r\n        });\r\n       }\r\n        \r\n      },\r\n    createElection:(req,res,next)=>{\r\n        var token1=  req.body.authorization;\r\n        var decoded = jwt.verify(token1, env.App_key);\r\n        console.log(\"decoded reqest from==>\", decoded.role)\r\n    \r\n        if (decoded.role=='admin') {\r\n         req.body.election_date=new Date(req.body.election_date);\r\n\r\n        req.body.election_created=new Date();\r\n          let electionDetails = new electionDetailsModel(req.body);\r\n          electionDetails.save(req.body, function(err, electionDetails) {\r\n            if (err) {\r\n              res.json({\r\n                isError: true,\r\n                data: err\r\n              });\r\n              \r\n            } else {\r\n              res.json({\r\n                success: true,\r\n                data: electionDetails\r\n              });\r\n            }\r\n\r\n          })\r\n\r\n        }\r\n        else{\r\n          res.json({\r\n            isError: true,\r\n            data: 'Unauthorized Access'\r\n          });\r\n         }\r\n\r\n\r\n    },\r\n    candidateReq:(req,res,next)=>{\r\n      var token1=  req.body.authorization;\r\n      var decoded = jwt.verify(token1, env.App_key);\r\n      console.log(\"decoded reqest from==>\", decoded.role)\r\n  \r\n      if (decoded.role=='admin') { \r\n        let findQuery={\r\n          $and:[\r\n            {election_name:req.body.election_name},\r\n            {isApprove:false}\r\n          ]\r\n        }\r\n        userElectionModel.find(findQuery,function (err,userElection) {\r\n          if (err) {\r\n            res.json({\r\n              isError: true,\r\n              data: err,\r\n              })\r\n            \r\n          } else {\r\n            if (userElection) {\r\n            \r\n                res.json({\r\n                  sucess: true,\r\n                  data: userElection,\r\n                  })\r\n            \r\n            \r\n            }\r\n            else{\r\n              res.json({\r\n                isError: true,\r\n                data: \"No Data Found\",\r\n                })\r\n            }\r\n           \r\n          }\r\n          \r\n        })\r\n\r\n\r\n      }\r\n      else{\r\n        res.json({\r\n          isError:true,\r\n          data:'Unauthorized access'\r\n        })\r\n      }\r\n      \r\n    },\r\n    approveCandidateReq:(req,res,next)=>{\r\n      var token1=  req.body.authorization;\r\n      var decoded = jwt.verify(token1, env.App_key);\r\n      console.log(\"decoded reqest from==>\", decoded.role)\r\n      var _id=req.body._id;\r\n      if (decoded.role=='admin') { \r\n        userElectionModel.findOneAndUpdate({_id:mongoose.Types.ObjectId(_id)},\r\n        {\r\n          $set:\r\n            {isApprove:true}\r\n          \r\n        },function (err,userElection) {\r\n          if (err) {\r\n            res.json({\r\n              isError: true,\r\n              data: err\r\n            })\r\n            \r\n          } else {\r\n            console.log(userElection);\r\n            \r\n            var election_name=userElection.election_name;\r\n            var emplID=userElection._id\r\n            var dataObj={\r\n              candidate:_id,\r\n              support:0\r\n            }\r\n\r\n            query = {election_name:election_name},\r\n            update = {  \r\n              $push: { candidateData: dataObj } \r\n            },\r\n            options = {new: true};\r\n            electionDetailsModel.findOneAndUpdate(query,update,options,function (error,electionDetails) {\r\n              if (error) {\r\n                res.json({\r\n                  isError: true,\r\n                  data: error\r\n                })\r\n                \r\n              } else {\r\n                res.json({\r\n                  success: true,\r\n                  data: {userElection:userElection,electionDetails:electionDetails}\r\n                })\r\n                \r\n              }\r\n            })\r\n         \r\n          }\r\n          \r\n        })\r\n      }\r\n      else{\r\n        res.json({\r\n          isError:true,\r\n          data:'Unauthorised Access'\r\n        })\r\n      }\r\n\r\n    },\r\n    approveTransactionReq:(req,res,next)=>{\r\n      var token1=  req.body.authorization;\r\n      var decoded = jwt.verify(token1, env.App_key);\r\n      var _id=req.body._id;\r\n      var phone_no= req.body.phone_no;\r\n      var accountNo=req.body.accountNo;\r\n      console.log(\"decoded reqest from==>\", decoded.role,accountNo)\r\n\r\n      if (decoded.role=='admin') { \r\n        var findQuery={phone_no:phone_no}\r\n        var updateQuery={\r\n          $set:\r\n            {transactionApprove:true}\r\n          \r\n        }\r\n        usersModel.findOneAndUpdate(findQuery,\r\n        updateQuery,function (err,userApprove) {\r\n          if (err) {\r\n            res.json({\r\n              isError: true,\r\n              data: err\r\n            })\r\n            \r\n          } else {\r\n            var userMsg='Transaction  Request Approve for user :'+phone_no;\r\n            var dataObj={\r\n              user:phone_no\r\n            }\r\n                      \r\n          axios.get('http://sms.swebsolutions.in/api/mt/SendSMS?user=WEBSOLUTION&password=swsmymv*13&senderid=SWSCOM&channel=Trans&DCS=0&flashsms=0&number='+ decoded.phone_no +'&text= '+ userMsg+'&route=6')\r\n          .then(response => {\r\n            if (response) {\r\n              if (accountNo) {\r\n                fightingFundModel.findOneAndUpdate({accountNo:accountNo},{ $push: {'user': dataObj } }, {\r\n                  upsert: true\r\n                },function (err,result) {\r\n                  if (err) {\r\n                    res.json({\r\n                      isError: true,\r\n                      data:err\r\n                    });\r\n                  \r\n                    \r\n                  }\r\n                  else{\r\n                    res.json({\r\n                      success: true,\r\n                      data:'request Approve for '+phone_no\r\n                    });\r\n                  }\r\n                 \r\n                \r\n                })\r\n              }\r\n              else{\r\n                \r\n              res.json({\r\n                isError: true,\r\n                data:'Invalid Account'\r\n              });\r\n              }\r\n              \r\n            }\r\n\r\n            \r\n          })\r\n          .catch(error => {\r\n            res.json({\r\n           isError: true,\r\n           data: error\r\n         });\r\n          });\r\n\r\n         \r\n          }\r\n          \r\n        })\r\n      }\r\n      else{\r\n        res.json({\r\n          isError:true,\r\n          data:'Unauthorised Access'\r\n        })\r\n      }\r\n    },\r\n    deActivateUser:(req,res,next)=>{\r\n      var phone_no=req.body.phone_no;\r\n      var token1=  req.body.authorization;\r\n      var decoded = jwt.verify(token1, env.App_key);\r\n      console.log(\"decoded reqest from==>\", decoded.role)\r\n  \r\n      if (decoded.role=='admin') { \r\n        usersModel.findOneAndUpdate({phone_no:phone_no},{$set:{isActive:false}},function (err,result) {\r\n          if (err) {\r\n            res.json({\r\n              isError:true,\r\n              data:err\r\n            })\r\n            \r\n          } else {\r\n            tokenModel.findOneAndUpdate({phone_no:phone_no},{ sort: { 'expiry' : -1 } },{$set:{isActive:false}},{new:true},function (error,data) {\r\n             \r\n             if (error) {\r\n              res.json({\r\n                isError:true,\r\n                data:error\r\n              })\r\n             } else {\r\n              res.json({\r\n                success:true,\r\n                data:data\r\n              })\r\n             }\r\n             \r\n            \r\n            })\r\n          }\r\n         \r\n        })\r\n      }\r\n      else{\r\n        res.json({\r\n          isError:true,\r\n          data:'Unauthorized access'\r\n        })\r\n\r\n      }\r\n     \r\n\r\n    },\r\n    setActiveUser:(req,res,next)=>{\r\n      var phone_no=req.body.phone_no;\r\n      var token1=  req.body.authorization;\r\n      var decoded = jwt.verify(token1, env.App_key);\r\n      console.log(\"decoded reqest from==>\", decoded.role)\r\n  \r\n      if (decoded.role=='admin') { \r\n        usersModel.findOneAndUpdate({phone_no:phone_no},{$set:{isActive:true}},function (err,result) {\r\n          if (err) {\r\n            res.json({\r\n              isError:true,\r\n              data:err\r\n            })\r\n            \r\n          } else {\r\n          \r\n              res.json({\r\n                success:true,\r\n                data:result\r\n              })\r\n          \r\n          }\r\n         \r\n        })\r\n      }\r\n      else{\r\n        res.json({\r\n          isError:true,\r\n          data:'Unauthorized access'\r\n        })\r\n\r\n      }\r\n     \r\n\r\n    },\r\n    deactiveCandidate:(req,res,next)=>{\r\n      var token1=  req.body.authorization;\r\n      var decoded = jwt.verify(token1, env.App_key);\r\n      console.log(\"deactiveCandidate reqest from==>\", decoded.role)\r\n      var _id=req.body._id;\r\n      if (decoded.role=='admin') { \r\n        userElectionModel.findOneAndUpdate({_id:mongoose.Types.ObjectId(_id)},\r\n        {\r\n          $set:\r\n            {isApprove:false}\r\n          \r\n        },function (err,userElection) {\r\n          if (err) {\r\n            res.json({\r\n              isError: true,\r\n              data: err\r\n            })\r\n            \r\n          } else {\r\n            console.log(userElection);\r\n            \r\n            var election_name=userElection.election_name;\r\n            var emplID=userElection._id\r\n            var dataObj={\r\n              candidate:_id,\r\n              support:0\r\n            }\r\n\r\n            query = {election_name:election_name},\r\n            update = {  \r\n              $pull: { candidateData: dataObj } \r\n            },\r\n            options = {new: true};\r\n            electionDetailsModel.findOneAndUpdate(query,update,options,function (error,electionDetails) {\r\n              if (error) {\r\n                res.json({\r\n                  isError: true,\r\n                  data: error\r\n                })\r\n                \r\n              } else {\r\n                res.json({\r\n                  success: true,\r\n                  data: {userElection:userElection,electionDetails:electionDetails}\r\n                })\r\n                \r\n              }\r\n            })\r\n         \r\n          }\r\n          \r\n        })\r\n      }\r\n      else{\r\n        res.json({\r\n          isError:true,\r\n          data:'Unauthorised Access'\r\n        })\r\n      }\r\n      \r\n    },\r\n  \r\n    addNotice:(req,res,next)=>{\r\n      var token1=  req.body.authorization;\r\n      var decoded = jwt.verify(token1, env.App_key);\r\n      console.log(\"decoded reqest from==>\", decoded.role)\r\n   \r\n      if (decoded.role=='admin') { \r\n        req.body.publishOn=new Date(req.body.publishOn)\r\n        let notice = new noticeModel(req.body);\r\n        notice.save(req.body, function(err, notice) {\r\n          if (err) {\r\n            res.json({\r\n              isError:true,\r\n              data:err\r\n            });\r\n\r\n          }\r\n          else{\r\n            res.json({\r\n              success:true,\r\n              data:notice\r\n            });\r\n          }\r\n        })\r\n      }\r\n      else{\r\n        res.json({\r\n          isError:true,\r\n          data:'Unauthorized access'\r\n        })\r\n      }\r\n    }\r\n  \r\n  \r\n   \r\n};\r\n\r\nmodule.exports= adminController;"]}
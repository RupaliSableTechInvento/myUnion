{"version":3,"sources":["../../server/controller/authController.js"],"names":["usersModel","require","tokenModel","companyModel","jwt","env","encode","hashCode","generator","axios","search","refference_code","refference_codeArray","console","log","i","length","code","express","app","authController","login","req","res","next","body","password","value","credential","query","$and","phone_no","isActive","find","err","user","json","d","Date","v","setMinutes","getMinutes","token1","sign","id","_id","name","full_name","role","expiry","App_key","decoded","verify","token","currentTime","token2","userActiveTime","findOneAndUpdate","$set","data","isError","create","sucess","getActiveUser","PhoneObj","index","push","$in","register","account_created","company_name","department_name","findQuery","company","dataRes","department","deptDataOfVoting","key","deptData","count","isRefferenceCodeFound","hasOwnProperty","passwordGenerated","generate","numbers","userMsg","save","error","get","trim","then","response","update","$elemMatch","result","nModified","catch","logout","authorization","userInactiveTime","new","success","isTokenValid","module","exports"],"mappings":"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","file":"authController.js","sourcesContent":["var usersModel =require( './../models/usersModel');\r\nvar tokenModel =require( './../models/tokenModel');\r\nvar companyModel =require( '../models/companyModel');\r\n\r\nvar jwt =require( 'jsonwebtoken');\r\nvar env =require( \"../env\");\r\nvar encode = require('hashcode').hashCode;\r\nvar generator = require('generate-password');\r\nconst axios = require('axios');\r\nfunction search(refference_code, refference_codeArray){\r\n  console.log(\"Search call\");\r\n  \r\n  for (var i=0; i < refference_codeArray.length; i++) {\r\n      if (refference_codeArray[i].code==refference_code) {\r\n        console.log(\"Search found==> True\");\r\n        \r\n          return true;\r\n      }\r\n      console.log(\"Search call\",i,refference_codeArray[i].code,refference_code);\r\n      if (i>refference_codeArray.length) {\r\n        console.log(\"length end\");\r\n        \r\n         return false;\r\n      }\r\n      \r\n  }\r\n}\r\nvar express =require( 'express');\r\nconst app = express();\r\n\r\n\r\nconst authController = {\r\n  login: (req, res, next) => {\r\n    \r\n    req.body.password = encode().value(req.body.password);\r\n    const credential = req.body;\r\n    console.log(\"user login==>\",credential);\r\n    var query={\r\n      $and:[\r\n        { phone_no: credential.phone_no},\r\n        { password: credential.password},\r\n        {isActive:'active'}\r\n      ]\r\n    }\r\n    // global.email = credential.email;\r\n    usersModel.find(query, (err, user) => {\r\n      if (err) res.json(err);\r\n      if (user.length>0) {\r\n        console.log(\"User[0]=>\", user)\r\n        var d = new Date();\r\n        var v = new Date();\r\n        v.setMinutes(d.getMinutes() + 10);\r\n        const token1 = jwt.sign({\r\n          phone_no: user[0].phone_no,\r\n          id: user[0]._id,\r\n          name:user[0].full_name,\r\n          role:'user',\r\n          expiry: v\r\n        }, env.App_key);\r\n        var decoded = jwt.verify(token1, env.App_key);\r\n        console.log(\"decoded reqest from==>\", decoded.role)\r\n        let token = new tokenModel();\r\n        var currentTime = new Date();\r\n        var token2 = {\r\n          token: token1,\r\n          phone_no: user[0].phone_no,\r\n          isActive: \"active\",\r\n          expiry: v,\r\n          userActiveTime: currentTime\r\n        };\r\n        tokenModel.findOneAndUpdate({\r\n          $and: [{\r\n            phone_no: user[0].phone_no\r\n          }, {\r\n            isActive: \"active\"\r\n          }]\r\n        }, {\r\n          $set: {\r\n            isActive: \"inactive\"\r\n          }\r\n        }, (err, data) => {\r\n          if (err) return res.json({\r\n            isError: true,\r\n            data: err\r\n          });\r\n          else {\r\n            console.log(\"tokenModel.findOneAndUpdate else\",data,credential.phone_no);\r\n            \r\n            tokenModel.create(token2, function(err, token) {\r\n              if (err) return res.json({\r\n                isError: true,\r\n                data: token1,\r\n                });\r\n              res.json({\r\n                sucess: true,\r\n                data: token1,\r\n                user: {\r\n                  phone_no: user[0].phone_no,\r\n                  full_name: user[0].full_name,\r\n                  id: user[0]._id\r\n                }\r\n              });\r\n            })\r\n          }\r\n        })\r\n      } else {\r\n        console.log(\"USer==>\",user);\r\n        res.json({\r\n          isError: true,\r\n          data: \"Invalid User !\"\r\n        })\r\n      }\r\n    });\r\n\r\n  },\r\n  getActiveUser: async(req, res, next) => {\r\n    await tokenModel.find({\r\n      isActive: \"active\"\r\n    }, (err, tokenModel) => {\r\n      if (err) return res.json({\r\n        isError: true,\r\n        tokenModel: err\r\n      });\r\n      else {\r\n        var PhoneObj = [];\r\n        console.log(\"trade model result\", tokenModel.length);\r\n        for (let index = 0; index < tokenModel.length; index++) {\r\n          PhoneObj.push(tokenModel[index].phone_no);\r\n        }\r\n        console.log(\"active user phone_no \", PhoneObj);\r\n\r\n        usersModel.find({\r\n          'phone_no': {\r\n            $in: PhoneObj\r\n          }\r\n        }, (err, user) => {\r\n          if (err) return res.json({\r\n            isError: true,\r\n            user: err\r\n          });\r\n          else {\r\n            return res.json({\r\n              sucess: true,\r\n              tokenModel: tokenModel,\r\n              user: user\r\n            });\r\n          }\r\n        });\r\n      }\r\n    })\r\n  },\r\n  register: (req, res, next) => {\r\n    console.log(\"req.body for register\", req.body)\r\n    var account_created = new Date();\r\n        \r\n\r\n        var company_name=req.body.company_name;\r\n        var department_name=req.body.department_name;\r\n        var refference_code=req.body.refference_code;\r\n\r\n\r\n        var findQuery={\r\n\r\n            'company_name':company_name\r\n        }\r\n        console.log(\"Find Query==>\",findQuery);\r\n        \r\n          companyModel.find(findQuery,async function(err,company) {\r\n           if (company) {\r\n             console.log(\"Company found==>\",company);\r\n          var refference_codeArray=[];\r\n          refference_codeArray=company[0].refference_code;\r\n          var dataRes = company[0].department;\r\n          var deptDataOfVoting={}\r\n           console.log(\" Company data==>\",  dataRes)\r\n          for (var key in dataRes) {\r\n            console.log(\"key==>\",key);\r\n           var deptData={\r\n             count:0\r\n           }\r\n            deptDataOfVoting[key] = deptData;  \r\n          }\r\n         var isRefferenceCodeFound =await search(refference_code, refference_codeArray);\r\n          if (await isRefferenceCodeFound ) {\r\n           \r\n            req.body.deptDataOfVoting=deptDataOfVoting;\r\n            console.log(\"valid Data==>\",req.body);\r\n            \r\n             \r\n            if (req.body.deptDataOfVoting.hasOwnProperty(department_name)) {\r\n              console.log(\"deptDataOfVoting==>\",req.body.deptDataOfVoting);\r\n              var passwordGenerated = generator.generate({\r\n                  length: 6,\r\n                  numbers: true\r\n                });\r\n                var phone_no=req.body.phone_no;\r\n                var userMsg='Congrats you are succesfully registerd for My union. Your password :'+passwordGenerated;\r\n              req.body.password = encode().value(passwordGenerated);\r\n              req.body.account_created = account_created;\r\n\r\n              let user = new usersModel(req.body);\r\n              user.save(req.body, function(err, user) {\r\n                if (err) {\r\n                  console.log(\"Error in user save\",err,user);\r\n                  \r\n                    res.json({\r\n                    isError: true,\r\n                    error: err\r\n                  });\r\n                } \r\n               \r\n                else{\r\n                  axios.get('http://sms.swebsolutions.in/api/mt/SendSMS?user=WEBSOLUTION&password=swsmymv*13&senderid=SWSCOM&channel=Trans&DCS=0&flashsms=0&number='+ phone_no.trim() +'&text= '+ userMsg+'&route=6')\r\n                  .then(response => {\r\n                    \r\n                    companyModel.update({\r\n                      $and: [{ company_name: company_name }, { refference_code: { $elemMatch: { 'code': refference_code } } }]\r\n                \r\n                    }, { $set: { \"refference_code.$.isactive\": true } }, function(err, result) {\r\n                      if (result.nModified) {\r\n\r\n                        console.log(\"refference code modified-->\",result);\r\n                        \r\n                \r\n                        res.json({\r\n                          sucess: true,\r\n                          data: user\r\n                        });\r\n\r\n                      }\r\n                    })\r\n                  \r\n\r\n                  })\r\n                  .catch(error => {\r\n                    console.log(error);\r\n                  });\r\n                }\r\n              })\r\n            } else {\r\n              res.json({\r\n                isError: true,\r\n                data: 'Departement not found'\r\n              });\r\n            }\r\n              \r\n          }\r\n          else {\r\n            console.log(\"Not found==>\",isRefferenceCodeFound);\r\n            \r\n            res.json({\r\n              isError: true,\r\n              data: 'match not found'\r\n            });\r\n          }\r\n          \r\n        }\r\n        else{\r\n          res.json({\r\n            isError: true,\r\n            data: 'Company not found'\r\n          });\r\n        }\r\n        \r\n          })\r\n      \r\n    \r\n  },\r\n  logout: (req, res, next) => {\r\n    \r\n    var decoded = jwt.verify(req.body.authorization, env.App_key);\r\n    var userInactiveTime=new Date();\r\n\r\n    console.log(\"logout request==>\",decoded.phone_no,req.body.authorization,userInactiveTime);\r\n\r\n    tokenModel.findOneAndUpdate({\r\n      $and: [{\r\n        token: req.body.authorization\r\n      },\r\n      {\r\n        phone_no: decoded.phone_no\r\n      },]\r\n    }, {\r\n      $set: {\r\n        isActive: \"inactive\",\r\n        userInactiveTime: userInactiveTime\r\n      }\r\n    },{ new: true },  (err, data) => {\r\n      console.log(\"logout data==>\",data);\r\n      \r\n      if (err) {\r\n        res.json({\r\n          isError: true,\r\n          data: err\r\n        });\r\n      } else {\r\n        res.json({\r\n          success: true,\r\n          data: data\r\n        });\r\n      }\r\n    })\r\n  },\r\n  isTokenValid:(req, res, next)=>{\r\n    console.log(\"is Token valid==>\",req.body);\r\n    var query={\r\n      $and: [{\r\n        token: req.body.authorization\r\n      },\r\n      {       \r\n        isActive: \"active\",\r\n      }]\r\n    }\r\n    \r\n      tokenModel.find(query,(err, data) => { \r\n      if (err) {\r\n        res.json({\r\n          isError: true,\r\n          data: err\r\n        });\r\n      } else {\r\n        if (data.length) {\r\n          res.json({\r\n            success: true,\r\n            data: data\r\n          });\r\n        }\r\n        else{\r\n          res.json({\r\n            isError: true,\r\n            data: 'invalid Token'\r\n          });\r\n        }\r\n    \r\n      }\r\n    })\r\n  },\r\n \r\n};\r\n\r\n\r\nmodule.exports= authController;"]}
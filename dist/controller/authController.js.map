{"version":3,"sources":["../../server/controller/authController.js"],"names":["usersModel","require","tokenModel","companyModel","jwt","env","encode","hashCode","generator","axios","search","refference_code","refference_codeArray","console","log","i","length","code","toString","express","app","authController","login","req","res","next","body","password","value","credential","find","$and","phone_no","isActive","err","user","json","d","Date","v","setMinutes","getMinutes","token1","sign","id","_id","role","expiry","App_key","decoded","verify","token","currentTime","token2","userActiveTime","findOneAndUpdate","$set","data","isError","create","sucess","full_name","getActiveUser","emailObj","index","push","email","$in","register","account_created","passwordGenerated","generate","numbers","userMsg","isCompanyValid","isDeptartmentValid","isRefference_codeValid","company_name","department_name","findOne","company","isRefferenceCodeFound","isDeptartmentFound","dataRes","department","deptDataOfVoting","key","deptData","count","hasOwnProperty","save","error","get","trim","then","response","update","$elemMatch","result","nModified","catch","logout","authorization","userInactiveTime","new","success","isTokenValid","module","exports"],"mappings":"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","file":"authController.js","sourcesContent":["var usersModel =require( './../models/usersModel');\r\nvar tokenModel =require( './../models/tokenModel');\r\nvar companyModel =require( '../models/companyModel');\r\n\r\nvar jwt =require( 'jsonwebtoken');\r\nvar env =require( \"../env\");\r\nvar encode = require('hashcode').hashCode;\r\nvar generator = require('generate-password');\r\nconst axios = require('axios');\r\nfunction search(refference_code, refference_codeArray){\r\n  console.log(\"Search call\");\r\n  \r\n  for (var i=0; i < refference_codeArray.length; i++) {\r\n      if (refference_codeArray[i].code.toString() ==refference_code.toString()) {\r\n        console.log(\"Search found==> True\");\r\n        \r\n          return true;\r\n      }\r\n      console.log(\"Search call\",i);\r\n      if (i>refference_codeArray.length) {\r\n\r\n         return false;\r\n      }\r\n      \r\n  }\r\n}\r\nvar express =require( 'express');\r\nconst app = express();\r\n\r\n\r\nconst authController = {\r\n  login: (req, res, next) => {\r\n    \r\n    req.body.password = encode().value(req.body.password);\r\n    const credential = req.body;\r\n    console.log(\"user login==>\",credential);\r\n\r\n    // global.email = credential.email;\r\n    usersModel.find({\r\n      $and:[\r\n        { phone_no: credential.phone_no},\r\n        { password: credential.password},\r\n        {isActive:'active'}\r\n      ]\r\n    }, (err, user) => {\r\n      if (err) res.json(err);\r\n      if (user.length) {\r\n        console.log(\"User[0]=>\", user)\r\n        var d = new Date();\r\n        var v = new Date();\r\n        v.setMinutes(d.getMinutes() + 10);\r\n        const token1 = jwt.sign({\r\n          phone_no: user[0].phone_no,\r\n          id: user[0]._id,\r\n          role:'user',\r\n          expiry: v\r\n        }, env.App_key);\r\n        var decoded = jwt.verify(token1, env.App_key);\r\n        console.log(\"decoded reqest from==>\", decoded.role)\r\n        let token = new tokenModel();\r\n        var currentTime = new Date();\r\n        var token2 = {\r\n          token: token1,\r\n          phone_no: user[0].phone_no,\r\n          isActive: \"active\",\r\n          expiry: v,\r\n          userActiveTime: currentTime\r\n        };\r\n        tokenModel.findOneAndUpdate({\r\n          $and: [{\r\n            phone_no: user[0].phone_no\r\n          }, {\r\n            isActive: \"active\"\r\n          }]\r\n        }, {\r\n          $set: {\r\n            isActive: \"inactive\"\r\n          }\r\n        }, (err, data) => {\r\n          if (err) return res.json({\r\n            isError: true,\r\n            data: err\r\n          });\r\n          else {\r\n            console.log(\"tokenModel.findOneAndUpdate else\",data,credential.phone_no);\r\n            \r\n            tokenModel.create(token2, function(err, token) {\r\n              if (err) return res.json({\r\n                isError: true,\r\n                data: token1,\r\n                });\r\n              res.json({\r\n                sucess: true,\r\n                data: token1,\r\n                user: {\r\n                  phone_no: user[0].phone_no,\r\n                  full_name: user[0].full_name,\r\n                  id: user[0]._id\r\n                }\r\n              });\r\n            })\r\n          }\r\n        })\r\n      } else {\r\n        console.log(\"USer==>\",user);\r\n        \r\n        res.json({\r\n          isError: true,\r\n          data: \"Invalid User !\"\r\n        })\r\n      }\r\n    });\r\n\r\n  },\r\n  getActiveUser: async(req, res, next) => {\r\n    await tokenModel.find({\r\n      isActive: \"active\"\r\n    }, (err, tokenModel) => {\r\n      if (err) return res.json({\r\n        isError: true,\r\n        tokenModel: err\r\n      });\r\n      else {\r\n        var emailObj = [];\r\n        console.log(\"trade model result\", tokenModel.length);\r\n        for (let index = 0; index < tokenModel.length; index++) {\r\n          emailObj.push(tokenModel[index].email);\r\n        }\r\n        console.log(\"active user email \", emailObj);\r\n\r\n        usersModel.find({\r\n          'email': {\r\n            $in: emailObj\r\n          }\r\n        }, (err, user) => {\r\n          if (err) return res.json({\r\n            isError: true,\r\n            user: err\r\n          });\r\n          else {\r\n            return res.json({\r\n              sucess: true,\r\n              tokenModel: tokenModel,\r\n              user: user\r\n            });\r\n          }\r\n        });\r\n      }\r\n    })\r\n  },\r\n  register: (req, res, next) => {\r\n    console.log(\"req.body for register\", req.body)\r\n    var account_created = new Date();\r\n        var passwordGenerated = generator.generate({\r\n          length: 6,\r\n          numbers: true\r\n        });\r\n        var phone_no=req.body.phone_no;\r\n        var userMsg='Congrats you are succesfully registerd for My union. Your password :'+passwordGenerated;\r\n      req.body.password = encode().value(passwordGenerated);\r\n      req.body.account_created = account_created;\r\n\r\n    \r\n      var isCompanyValid=false;\r\n      var isDeptartmentValid=false;\r\n      var isRefference_codeValid=false;\r\n      var isCompanyValid=(req.body.company_name.length>0)?true:false;\r\n      var isDeptartmentValid=(req.body.department_name.length>0)?true:false;\r\n      var isRefference_codeValid=(req.body.refference_code.length>0)?true:false;\r\n      // console.log(\"Account Created==>\", account_created,isCompanyValid,isDeptartmentValid,isRefference_codeValid);\r\n\r\n      if ((isCompanyValid)&&(isDeptartmentValid)&&(isRefference_codeValid)) {\r\n        var company_name=req.body.company_name;\r\n        var department_name=req.body.department_name;\r\n        var refference_code=req.body.refference_code;\r\n          companyModel.findOne({'company_name':company_name},  function (err,company) {\r\n        if (company) {\r\n\r\n          var isRefferenceCodeFound=false;\r\n          var isDeptartmentFound=false;\r\n          var refference_codeArray=[];\r\n          refference_codeArray=company.refference_code;\r\n          console.log(\"department in comapny==>\",refference_codeArray,refference_code);\r\n          \r\n\r\n          var dataRes = company.department;\r\n          var deptDataOfVoting={\r\n           \r\n          }\r\n           console.log(\" Company data==>\",  dataRes);\r\n          \r\n\r\n          for (var key in dataRes) {\r\n            console.log(\"key==>\",key);\r\n           var deptData={\r\n             count:0\r\n           }\r\n            // var updateQuery = 'deptDataOfVoting.' + key;\r\n            deptDataOfVoting[key] = deptData;\r\n            \r\n            if (key.toString() == department_name.toString()) {\r\n              isDeptartmentFound=true;\r\n              var isRefferenceCodeFound = search(refference_code, refference_codeArray);\r\n              console.log(\"department and reff code found ==>\",isDeptartmentFound,isRefferenceCodeFound);\r\n            }\r\n\r\n          }\r\n        \r\n          if (isDeptartmentFound&&isRefferenceCodeFound ) {\r\n           \r\n            req.body.deptDataOfVoting=deptDataOfVoting;\r\n            console.log(\"valid Data==>\",req.body);\r\n\r\n            if (req.body.deptDataOfVoting.hasOwnProperty(department_name)) {\r\n              console.log(\"deptDataOfVoting==>\",req.body.deptDataOfVoting);\r\n\r\n              let user = new usersModel(req.body);\r\n              user.save(req.body, function(err, user) {\r\n                if (err) {\r\n                  console.log(\"Error in user save\",err,user);\r\n                  \r\n                    res.json({\r\n                    isError: true,\r\n                    error: err\r\n                  });\r\n                } \r\n               \r\n                else{\r\n                  axios.get('http://sms.swebsolutions.in/api/mt/SendSMS?user=WEBSOLUTION&password=swsmymv*13&senderid=SWSCOM&channel=Trans&DCS=0&flashsms=0&number='+ phone_no.trim() +'&text= '+ userMsg+'&route=6')\r\n                  .then(response => {\r\n                    \r\n                    companyModel.update({\r\n                      $and: [{ company_name: company_name }, { refference_code: { $elemMatch: { 'code': refference_code } } }]\r\n                \r\n                    }, { $set: { \"refference_code.$.isactive\": true } }, function(err, result) {\r\n                      if (result.nModified) {\r\n\r\n                        console.log(\"refference code modified-->\",result);\r\n                        \r\n                \r\n                        res.json({\r\n                          sucess: true,\r\n                          data: user\r\n                        });\r\n\r\n                      }\r\n                    })\r\n                  \r\n\r\n                  })\r\n                  .catch(error => {\r\n                    console.log(error);\r\n                  });\r\n                }\r\n              })\r\n            } else {\r\n              res.json({\r\n                isError: true,\r\n                data: 'Departement not found'\r\n              });\r\n            }\r\n              \r\n          }\r\n          else{\r\n            res.json({\r\n              isError: true,\r\n              data: 'match not found'\r\n            });\r\n          }\r\n          \r\n        }\r\n        else{\r\n          res.json({\r\n            isError: true,\r\n            data: 'Company not found'\r\n          });\r\n        }\r\n        \r\n      })\r\n      }\r\n      else{\r\n        res.json({\r\n          isError: true,\r\n          data: 'please provide required fields'\r\n        });\r\n      }\r\n  },\r\n  logout: (req, res, next) => {\r\n    \r\n    var decoded = jwt.verify(req.body.authorization, env.App_key);\r\n    var userInactiveTime=new Date();\r\n\r\n    console.log(\"logout request==>\",decoded.phone_no,req.body.authorization,userInactiveTime);\r\n\r\n    tokenModel.findOneAndUpdate({\r\n      $and: [{\r\n        token: req.body.authorization\r\n      },\r\n      {\r\n        phone_no: decoded.phone_no\r\n      },]\r\n    }, {\r\n      $set: {\r\n        isActive: \"inactive\",\r\n        userInactiveTime: userInactiveTime\r\n      }\r\n    },{ new: true },  (err, data) => {\r\n      console.log(\"logout data==>\",data);\r\n      \r\n      if (err) {\r\n        res.json({\r\n          isError: true,\r\n          data: err\r\n        });\r\n      } else {\r\n        res.json({\r\n          success: true,\r\n          data: data\r\n        });\r\n      }\r\n    })\r\n  },\r\n  isTokenValid:(req, res, next)=>{\r\n    console.log(\"is Token valid==>\",req.body);\r\n    \r\n      tokenModel.find({\r\n      $and: [{\r\n        token: req.body.authorization\r\n      },\r\n      {\r\n        isActive: \"active\",\r\n      }]\r\n    },(err, data) => { \r\n      if (err) {\r\n        res.json({\r\n          isError: true,\r\n          data: err\r\n        });\r\n      } else {\r\n        if (data.length) {\r\n          res.json({\r\n            success: true,\r\n            data: data\r\n          });\r\n        }\r\n        else{\r\n          res.json({\r\n            isError: true,\r\n            data: 'invalid Token'\r\n          });\r\n        }\r\n    \r\n      }\r\n    })\r\n  },\r\n \r\n};\r\n\r\n\r\nmodule.exports= authController;"]}
{"version":3,"sources":["../../server/controller/authController.js"],"names":["usersModel","require","tokenModel","companyModel","jwt","env","encode","hashCode","generator","axios","search","refference_code","refference_codeArray","console","log","i","length","code","express","app","authController","login","req","res","next","body","password","value","credential","query","$and","phone_no","isActive","find","err","user","json","d","Date","v","setMinutes","getMinutes","token1","sign","id","_id","role","expiry","App_key","decoded","verify","token","currentTime","token2","userActiveTime","findOneAndUpdate","$set","data","isError","create","sucess","full_name","getActiveUser","PhoneObj","index","push","$in","register","account_created","company_name","department_name","findQuery","company","dataRes","department","deptDataOfVoting","key","deptData","count","isRefferenceCodeFound","hasOwnProperty","passwordGenerated","generate","numbers","userMsg","save","error","get","trim","then","response","update","$elemMatch","result","nModified","catch","logout","authorization","userInactiveTime","new","success","isTokenValid","module","exports"],"mappings":"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","file":"authController.js","sourcesContent":["var usersModel =require( './../models/usersModel');\r\nvar tokenModel =require( './../models/tokenModel');\r\nvar companyModel =require( '../models/companyModel');\r\n\r\nvar jwt =require( 'jsonwebtoken');\r\nvar env =require( \"../env\");\r\nvar encode = require('hashcode').hashCode;\r\nvar generator = require('generate-password');\r\nconst axios = require('axios');\r\nfunction search(refference_code, refference_codeArray){\r\n  console.log(\"Search call\");\r\n  \r\n  for (var i=0; i < refference_codeArray.length; i++) {\r\n      if (refference_codeArray[i].code==refference_code) {\r\n        console.log(\"Search found==> True\");\r\n        \r\n          return true;\r\n      }\r\n      console.log(\"Search call\",i,refference_codeArray[i].code,refference_code);\r\n      if (i>refference_codeArray.length) {\r\n        console.log(\"length end\");\r\n        \r\n         return false;\r\n      }\r\n      \r\n  }\r\n}\r\nvar express =require( 'express');\r\nconst app = express();\r\n\r\n\r\nconst authController = {\r\n  login: (req, res, next) => {\r\n    \r\n    req.body.password = encode().value(req.body.password);\r\n    const credential = req.body;\r\n    console.log(\"user login==>\",credential);\r\n    var query={\r\n      $and:[\r\n        { phone_no: credential.phone_no},\r\n        { password: credential.password},\r\n        {isActive:'active'}\r\n      ]\r\n    }\r\n    // global.email = credential.email;\r\n    usersModel.find(query, (err, user) => {\r\n      if (err) res.json(err);\r\n      if (user.length>0) {\r\n        console.log(\"User[0]=>\", user)\r\n        var d = new Date();\r\n        var v = new Date();\r\n        v.setMinutes(d.getMinutes() + 10);\r\n        const token1 = jwt.sign({\r\n          phone_no: user[0].phone_no,\r\n          id: user[0]._id,\r\n          role:'user',\r\n          expiry: v\r\n        }, env.App_key);\r\n        var decoded = jwt.verify(token1, env.App_key);\r\n        console.log(\"decoded reqest from==>\", decoded.role)\r\n        let token = new tokenModel();\r\n        var currentTime = new Date();\r\n        var token2 = {\r\n          token: token1,\r\n          phone_no: user[0].phone_no,\r\n          isActive: \"active\",\r\n          expiry: v,\r\n          userActiveTime: currentTime\r\n        };\r\n        tokenModel.findOneAndUpdate({\r\n          $and: [{\r\n            phone_no: user[0].phone_no\r\n          }, {\r\n            isActive: \"active\"\r\n          }]\r\n        }, {\r\n          $set: {\r\n            isActive: \"inactive\"\r\n          }\r\n        }, (err, data) => {\r\n          if (err) return res.json({\r\n            isError: true,\r\n            data: err\r\n          });\r\n          else {\r\n            console.log(\"tokenModel.findOneAndUpdate else\",data,credential.phone_no);\r\n            \r\n            tokenModel.create(token2, function(err, token) {\r\n              if (err) return res.json({\r\n                isError: true,\r\n                data: token1,\r\n                });\r\n              res.json({\r\n                sucess: true,\r\n                data: token1,\r\n                user: {\r\n                  phone_no: user[0].phone_no,\r\n                  full_name: user[0].full_name,\r\n                  id: user[0]._id\r\n                }\r\n              });\r\n            })\r\n          }\r\n        })\r\n      } else {\r\n        console.log(\"USer==>\",user);\r\n        res.json({\r\n          isError: true,\r\n          data: \"Invalid User !\"\r\n        })\r\n      }\r\n    });\r\n\r\n  },\r\n  getActiveUser: async(req, res, next) => {\r\n    await tokenModel.find({\r\n      isActive: \"active\"\r\n    }, (err, tokenModel) => {\r\n      if (err) return res.json({\r\n        isError: true,\r\n        tokenModel: err\r\n      });\r\n      else {\r\n        var PhoneObj = [];\r\n        console.log(\"trade model result\", tokenModel.length);\r\n        for (let index = 0; index < tokenModel.length; index++) {\r\n          PhoneObj.push(tokenModel[index].phone_no);\r\n        }\r\n        console.log(\"active user phone_no \", PhoneObj);\r\n\r\n        usersModel.find({\r\n          'phone_no': {\r\n            $in: PhoneObj\r\n          }\r\n        }, (err, user) => {\r\n          if (err) return res.json({\r\n            isError: true,\r\n            user: err\r\n          });\r\n          else {\r\n            return res.json({\r\n              sucess: true,\r\n              tokenModel: tokenModel,\r\n              user: user\r\n            });\r\n          }\r\n        });\r\n      }\r\n    })\r\n  },\r\n  register: (req, res, next) => {\r\n    console.log(\"req.body for register\", req.body)\r\n    var account_created = new Date();\r\n        \r\n\r\n        var company_name=req.body.company_name;\r\n        var department_name=req.body.department_name;\r\n        var refference_code=req.body.refference_code;\r\n\r\n\r\n        var findQuery={\r\n\r\n            'company_name':company_name\r\n        }\r\n        console.log(\"Find Query==>\",findQuery);\r\n        \r\n          companyModel.find(findQuery,async function(err,company) {\r\n           if (company) {\r\n             console.log(\"Company found==>\",company);\r\n          var refference_codeArray=[];\r\n          refference_codeArray=company[0].refference_code;\r\n          var dataRes = company[0].department;\r\n          var deptDataOfVoting={}\r\n           console.log(\" Company data==>\",  dataRes)\r\n          for (var key in dataRes) {\r\n            console.log(\"key==>\",key);\r\n           var deptData={\r\n             count:0\r\n           }\r\n            deptDataOfVoting[key] = deptData;  \r\n          }\r\n         var isRefferenceCodeFound =await search(refference_code, refference_codeArray);\r\n          if (await isRefferenceCodeFound ) {\r\n           \r\n            req.body.deptDataOfVoting=deptDataOfVoting;\r\n            console.log(\"valid Data==>\",req.body);\r\n            \r\n             \r\n            if (req.body.deptDataOfVoting.hasOwnProperty(department_name)) {\r\n              console.log(\"deptDataOfVoting==>\",req.body.deptDataOfVoting);\r\n              var passwordGenerated = generator.generate({\r\n                  length: 6,\r\n                  numbers: true\r\n                });\r\n                var phone_no=req.body.phone_no;\r\n                var userMsg='Congrats you are succesfully registerd for My union. Your password :'+passwordGenerated;\r\n              req.body.password = encode().value(passwordGenerated);\r\n              req.body.account_created = account_created;\r\n\r\n              let user = new usersModel(req.body);\r\n              user.save(req.body, function(err, user) {\r\n                if (err) {\r\n                  console.log(\"Error in user save\",err,user);\r\n                  \r\n                    res.json({\r\n                    isError: true,\r\n                    error: err\r\n                  });\r\n                } \r\n               \r\n                else{\r\n                  axios.get('http://sms.swebsolutions.in/api/mt/SendSMS?user=WEBSOLUTION&password=swsmymv*13&senderid=SWSCOM&channel=Trans&DCS=0&flashsms=0&number='+ phone_no.trim() +'&text= '+ userMsg+'&route=6')\r\n                  .then(response => {\r\n                    \r\n                    companyModel.update({\r\n                      $and: [{ company_name: company_name }, { refference_code: { $elemMatch: { 'code': refference_code } } }]\r\n                \r\n                    }, { $set: { \"refference_code.$.isactive\": true } }, function(err, result) {\r\n                      if (result.nModified) {\r\n\r\n                        console.log(\"refference code modified-->\",result);\r\n                        \r\n                \r\n                        res.json({\r\n                          sucess: true,\r\n                          data: user\r\n                        });\r\n\r\n                      }\r\n                    })\r\n                  \r\n\r\n                  })\r\n                  .catch(error => {\r\n                    console.log(error);\r\n                  });\r\n                }\r\n              })\r\n            } else {\r\n              res.json({\r\n                isError: true,\r\n                data: 'Departement not found'\r\n              });\r\n            }\r\n              \r\n          }\r\n          else {\r\n            console.log(\"Not found==>\",isRefferenceCodeFound);\r\n            \r\n            res.json({\r\n              isError: true,\r\n              data: 'match not found'\r\n            });\r\n          }\r\n          \r\n        }\r\n        else{\r\n          res.json({\r\n            isError: true,\r\n            data: 'Company not found'\r\n          });\r\n        }\r\n        \r\n          })\r\n      \r\n    \r\n  },\r\n  logout: (req, res, next) => {\r\n    \r\n    var decoded = jwt.verify(req.body.authorization, env.App_key);\r\n    var userInactiveTime=new Date();\r\n\r\n    console.log(\"logout request==>\",decoded.phone_no,req.body.authorization,userInactiveTime);\r\n\r\n    tokenModel.findOneAndUpdate({\r\n      $and: [{\r\n        token: req.body.authorization\r\n      },\r\n      {\r\n        phone_no: decoded.phone_no\r\n      },]\r\n    }, {\r\n      $set: {\r\n        isActive: \"inactive\",\r\n        userInactiveTime: userInactiveTime\r\n      }\r\n    },{ new: true },  (err, data) => {\r\n      console.log(\"logout data==>\",data);\r\n      \r\n      if (err) {\r\n        res.json({\r\n          isError: true,\r\n          data: err\r\n        });\r\n      } else {\r\n        res.json({\r\n          success: true,\r\n          data: data\r\n        });\r\n      }\r\n    })\r\n  },\r\n  isTokenValid:(req, res, next)=>{\r\n    console.log(\"is Token valid==>\",req.body);\r\n    var query={\r\n      $and: [{\r\n        token: req.body.authorization\r\n      },\r\n      {       \r\n        isActive: \"active\",\r\n      }]\r\n    }\r\n    \r\n      tokenModel.find(query,(err, data) => { \r\n      if (err) {\r\n        res.json({\r\n          isError: true,\r\n          data: err\r\n        });\r\n      } else {\r\n        if (data.length) {\r\n          res.json({\r\n            success: true,\r\n            data: data\r\n          });\r\n        }\r\n        else{\r\n          res.json({\r\n            isError: true,\r\n            data: 'invalid Token'\r\n          });\r\n        }\r\n    \r\n      }\r\n    })\r\n  },\r\n \r\n};\r\n\r\n\r\nmodule.exports= authController;"]}
{"version":3,"sources":["../../server/controller/departmentController.js"],"names":["companyModel","require","adminModel","jwt","env","mongoose","encode","hashCode","companyController","addDept","req","res","next","console","log","body","token1","authorization","decoded","verify","App_key","role","deptData","voteCount","parseInt","$setObj","updateQuery","deptName","findOneAndUpdate","company_name","$set","new","err","Company","json","isError","data","Success","updateVoteCount","find","dataRes","department","key","toString","getAllCount","company","Object","keys","length","totalDept","success","getAllDept","deptArray","forEach","push","module","exports"],"mappings":"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","file":"departmentController.js","sourcesContent":["var companyModel =require( '../models/companyModel')\r\nvar adminModel=require( '../models/adminModel')\r\nvar jwt =require( 'jsonwebtoken');\r\nvar env =require( \"../env\");\r\nvar mongoose = require('mongoose');\r\nvar encode = require('hashcode').hashCode;\r\n\r\nconst companyController = {\r\n   \r\n    addDept: (req, res, next) => {\r\n        console.log(\"department  register\", req.body)\r\n         var token1=  req.body.authorization;\r\n        var decoded = jwt.verify(token1, env.App_key);\r\n        console.log(\"decoded reqest from==>\", decoded.role)\r\n    \r\n        if (decoded.role=='admin') {      \r\n         \r\n\r\n            var deptData={};\r\n            deptData.voteCount =parseInt(req.body.voteCount);\r\n            var $setObj = {};\r\n            var updateQuery = 'department.' + req.body.deptName;\r\n            $setObj[updateQuery] = deptData;\r\n            console.log(\"$setObj=>\", $setObj);\r\n            \r\n            //  wallets[CoinCode];\r\n            console.log(\"updateQuery department=>\",  updateQuery, deptData);\r\n            \r\n            companyModel.findOneAndUpdate({\r\n                company_name: req.body.company_name\r\n            }, {\r\n              $set: $setObj\r\n            }, {\r\n              new: true\r\n            }, (err, Company) => {\r\n            \r\n              if (err) return res.json({\r\n                isError: true,\r\n                data: err\r\n              });\r\n              res.json({\r\n                Success: true,\r\n                data: Company\r\n              })\r\n            });\r\n        \r\n        } else {\r\n          res.json({\r\n            isError: true,\r\n            data: 'Unauthorized access'\r\n          });;\r\n        }\r\n    },\r\n    updateVoteCount:(req,res,next)=>{\r\n\r\n        console.log(\"department  register\", req.body)\r\n        var token1=  req.body.authorization;\r\n       var decoded = jwt.verify(token1, env.App_key);\r\n       console.log(\"decoded reqest from==>\", decoded.role)\r\n   \r\n       if (decoded.role=='admin') {           \r\n        var deptData={};\r\n        deptData.voteCount =parseInt(req.body.voteCount);\r\n        var $setObj = {};\r\n        var updateQuery = 'department.' + req.body.deptName;\r\n        var deptName=req.body.deptName;\r\n        $setObj[updateQuery] = deptData;\r\n        console.log(\"$setObj=>\", $setObj);\r\n        \r\n        //  wallets[CoinCode];\r\n        console.log(\"updateQuery department=>\",  updateQuery, deptData);\r\n\r\n\r\n           companyModel.find({ company_name: req.body. company_name }, (err, Company) => {\r\n           \r\n             if (err) return res.json({\r\n               isError: true,\r\n               data: err\r\n             });\r\n            else{\r\n                var dataRes = Company[0].department;\r\n                // console.log(\"newTransaction user data==>\", users, dataRes);\r\n      \r\n                for (var key in dataRes) {\r\n                  if (key.toString() == deptName.toString()) {\r\n      \r\n                  console.log(\"key matched==>\",key,deptName);\r\n                  \r\n                    companyModel.findOneAndUpdate(            \r\n                        { company_name: req.body.company_name }     \r\n                    , {\r\n                        $set: $setObj\r\n                    }, {\r\n                        new: true\r\n                    }, (err, Company) => {\r\n                    \r\n                        if (err) return res.json({\r\n                        isError: true,\r\n                        data: err\r\n                        });\r\n                        res.json({\r\n                          Success: true,\r\n                        data: Company\r\n                        })\r\n                    });\r\n\r\n\r\n\r\n                  }\r\n      \r\n                }\r\n\r\n                \r\n            }\r\n           }); \r\n       \r\n       } else {\r\n         res.json(\"Unauthorized access\");\r\n       }\r\n\r\n\r\n    },\r\n    getAllCount:(req,res,next)=>{\r\n      var company_name=req.body.company_name;\r\n      companyModel.find({'company_name':company_name},function (err,company) {\r\n          if (err) {\r\n              res.json({\r\n                  isError:true,\r\n                  data:err\r\n              })            \r\n          }\r\n          else{\r\n            console.log(\"company found==>\",company);\r\n           var department= company[0].department;\r\n           console.log(\"size of department==>\",Object.keys(department).length);\r\n           \r\n           var totalDept=Object.keys(department).length;\r\n            \r\n            res.json({\r\n                success:true,\r\n                data:totalDept\r\n            })\r\n          }\r\n          \r\n      })\r\n    },\r\n    getAllDept:(req,res,next)=>{\r\n      var company_name=req.body.company_name;\r\n      companyModel.find({'company_name':company_name},function (err,company) {\r\n          if (err) {\r\n              res.json({\r\n                  isError:true,\r\n                  data:err\r\n              })            \r\n          }\r\n          else{\r\n           var department= company[0].department; \r\n           var deptArray=[]\r\n           console.log(\"department found==>\",department);\r\n           Object.keys(department).forEach(function(key) {\r\n\r\n            deptArray.push(key)\r\n           })\r\n           if (deptArray.length) {\r\n            res.json({\r\n                success:true,\r\n                data:deptArray\r\n            })\r\n           }\r\n         \r\n          }\r\n          \r\n      })\r\n    }   \r\n};\r\n\r\nmodule.exports= companyController;"]}
{"version":3,"sources":["../../server/controller/electionController.js"],"names":["adminModel","require","usersModel","tokenModel","companyModel","electionDetailsModel","jwt","env","mongoose","encode","hashCode","generator","axios","electionController","getElection","req","res","next","company_name","body","query","$and","isActive","find","exec","err","result","json","isError","data","length","success","updateElection","token1","authorization","election_name","newelection_name","decoded","verify","App_key","console","log","role","update","election_date","$set","options","new","findOneAndUpdate","module","exports"],"mappings":"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","file":"electionController.js","sourcesContent":["var adminModel=require( '../models/adminModel')\r\nvar usersModel =require( './../models/usersModel');\r\nvar tokenModel =require( './../models/tokenModel');\r\nvar companyModel =require( '../models/companyModel');\r\nvar electionDetailsModel=require('../models/electionDetailsModel');\r\nvar jwt =require( 'jsonwebtoken');\r\nvar env =require( \"../env\");\r\nvar mongoose = require('mongoose');\r\nvar encode = require('hashcode').hashCode;\r\nvar generator = require('generate-password');\r\nconst axios = require('axios');\r\n\r\n\r\nconst electionController = {\r\n  getElection:(req,res,next)=>{\r\n    var company_name=req.body.company_name\r\n    var query=  {\r\n      $and:[\r\n        {company_name:company_name},\r\n        {isActive:true}\r\n      ]\r\n     }\r\n\r\n    electionDetailsModel.find(\r\n   query\r\n      ).exec(function(err, result) { \r\n      if (err) {\r\n        res.json({\r\n          isError:true,\r\n          data:err\r\n        })\r\n      } else {\r\n        if (result.length) {\r\n          res.json({\r\n            success:true,\r\n            data:result[0]\r\n          })\r\n          \r\n        } else {\r\n          res.json({\r\n            success:true,\r\n            data:\"Yet Election is not added.\"\r\n          })\r\n        }\r\n       \r\n      }\r\n     });\r\n   \r\n  },\r\n  updateElection:(req,res,next)=>{\r\n    var token1=  req.body.authorization;\r\n    var company_name=req.body.company_name\r\n    var election_name=req.body.election_name\r\n    var newelection_name=req.body.newelection_name\r\n    var decoded = jwt.verify(token1, env.App_key);\r\n    console.log(\"decoded reqest from==>\", decoded.role)\r\n\r\n    if (decoded.role=='admin') {\r\n\r\n    var update={}\r\n    var query={\r\n      company_name:company_name,\r\n      election_name:election_name\r\n    }\r\n     if(newelection_name&&req.body.election_date ) {\r\n      update={\r\n        $set:{\r\n          election_name: newelection_name,\r\n          election_date:req.body.election_date\r\n        }\r\n      }\r\n    }\r\n    else if (newelection_name) {\r\n      update={\r\n        $set:{\r\n          election_name: newelection_name\r\n        }\r\n      }\r\n      \r\n    } else if(req.body.election_date ) {\r\n      update={\r\n        $set:{\r\n  \r\n          election_date:req.body.election_date\r\n        }\r\n      }\r\n    }\r\n \r\n    else{\r\n      update={}\r\n    }\r\n    options = {new: true};\r\n\r\n      electionDetailsModel.findOneAndUpdate(query,update,options,function(err, result) { \r\n        if (err) {\r\n          res.json({\r\n            isError:true,\r\n            data:err\r\n          })\r\n        } else {\r\n          res.json({\r\n            success:true,\r\n            data:result\r\n          })\r\n        }\r\n       });\r\n    }\r\n    else{\r\n\r\n    }\r\n\r\n  }\r\n  \r\n};\r\n\r\nmodule.exports= electionController;"]}
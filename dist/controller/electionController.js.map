{"version":3,"sources":["../../server/controller/electionController.js"],"names":["electionDetailsModel","require","userElectionModel","jwt","env","electionController","getElection","req","res","next","company_name","body","query","$and","isActive","find","exec","err","result","json","isError","data","length","success","updateElection","token1","authorization","election_name","newelection_name","decoded","verify","App_key","console","log","role","update","election_date","$set","options","new","findOneAndUpdate","getAllApproveCandidate","findElectionQuery","findQuery","isApprove","resultObj","candidateData","userElection","forEach","element","item","candidate","_id","full_name","phone_no","imageUrl","status","support","push","module","exports"],"mappings":"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","file":"electionController.js","sourcesContent":["\r\nvar electionDetailsModel=require('../models/electionDetailsModel');\r\nvar userElectionModel=require('../models/userElectionModel');\r\n\r\nvar jwt =require( 'jsonwebtoken');\r\nvar env =require( \"../env\");\r\n\r\n\r\n\r\nconst electionController = {\r\n  getElection:(req,res,next)=>{\r\n    var company_name=req.body.company_name\r\n    var query=  {\r\n      $and:[\r\n        {company_name:company_name},\r\n        {isActive:true}\r\n      ]\r\n     }\r\n    electionDetailsModel.find( query).exec(function(err, result) { \r\n      if (err) {\r\n        res.json({\r\n          isError:true,\r\n          data:err\r\n        })\r\n      } else {\r\n        if (result.length) {\r\n          res.json({\r\n            success:true,\r\n            data:result[0]\r\n          })\r\n          \r\n        } else {\r\n          res.json({\r\n            success:true,\r\n            data:\"Yet Election is not added.\"\r\n          })\r\n        }\r\n       \r\n      }\r\n     });\r\n   \r\n  },\r\n  updateElection:(req,res,next)=>{\r\n    var token1=  req.body.authorization;\r\n    var company_name=req.body.company_name\r\n    var election_name=req.body.election_name\r\n    var newelection_name=req.body.newelection_name\r\n    var decoded = jwt.verify(token1, env.App_key);\r\n    console.log(\"decoded reqest from==>\", decoded.role)\r\n\r\n    if (decoded.role=='admin') {\r\n\r\n    var update={}\r\n    var query={\r\n      company_name:company_name,\r\n      election_name:election_name\r\n    }\r\n     if(newelection_name&&req.body.election_date ) {\r\n      update={\r\n        $set:{\r\n          election_name: newelection_name,\r\n          election_date:req.body.election_date\r\n        }\r\n      }\r\n    }\r\n    else if (newelection_name) {\r\n      update={\r\n        $set:{\r\n          election_name: newelection_name\r\n        }\r\n      }\r\n      \r\n    } else if(req.body.election_date ) {\r\n      update={\r\n        $set:{\r\n  \r\n          election_date:req.body.election_date\r\n        }\r\n      }\r\n    }\r\n \r\n    else{\r\n      update={}\r\n    }\r\n    options = {new: true};\r\n\r\n      electionDetailsModel.findOneAndUpdate(query,update,options,function(err, result) { \r\n        if (err) {\r\n          res.json({\r\n            isError:true,\r\n            data:err\r\n          })\r\n        } else {\r\n          res.json({\r\n            success:true,\r\n            data:result\r\n          })\r\n        }\r\n       });\r\n    }\r\n    else{\r\n\r\n    }\r\n\r\n  },\r\n  getAllApproveCandidate:(req,res,next)=>{\r\n   let company_name=req.body.company_name\r\n   var findElectionQuery={\r\n    $and:[\r\n      {company_name:company_name},\r\n      {isActive:true},\r\n    ]\r\n  }\r\n\r\n   electionDetailsModel.find(findElectionQuery,function (err,result) {\r\n    if (err) {\r\n      res.json({\r\n        isError: true,\r\n        data: err\r\n      })\r\n      \r\n    } else {\r\n      if (result.length>0) {\r\n        var election_name=result[0].election_name\r\n        console.log(\"Election name==>\",election_name);\r\n        \r\n  \r\n        var findQuery={\r\n          $and:[\r\n            {company_name:company_name},\r\n            {election_name:election_name},\r\n            {isApprove:true}\r\n          ]\r\n        }\r\n          var resultObj=[]\r\n          var candidateData=[];\r\n          var data={}\r\n          candidateData=result[0].candidateData;    \r\n      userElectionModel.find(findQuery,\r\n        function (err,userElection) {\r\n          if (err) {\r\n            res.json({\r\n              isError: true,\r\n              data: err\r\n            })\r\n            \r\n          } else \r\n          {\r\n            userElection.forEach(element => {\r\n              candidateData.forEach(item=>{\r\n               if (item.candidate==element._id) {\r\n                 console.log(\"Element Matched==>\",element,item);\r\n                  data={\r\n                   _id:element._id,\r\n                   full_name:element.full_name,\r\n                   phone_no:element.phone_no,\r\n                   imageUrl:element.imageUrl,\r\n                   status:element.status,\r\n                   support:item.support\r\n                 }\r\n               \r\n                 resultObj.push(data)\r\n               }\r\n             })\r\n             console.log(\"Element==>\",element);\r\n             \r\n             \r\n           });\r\n           if (resultObj.length==candidateData.length) {\r\n             console.log(\"resultObj==>\",resultObj);\r\n             res.json({\r\n               success: true,\r\n               data: {resultObj}\r\n             })\r\n           }\r\n   \r\n         \r\n          }\r\n          \r\n        })\r\n        \r\n        \r\n      } else {\r\n        \r\n        res.json({\r\n          isError:true,\r\n          data:'No data found'\r\n        })\r\n      }\r\n    \r\n    \r\n    }\r\n    \r\n  })\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  },\r\n  \r\n};\r\n\r\nmodule.exports= electionController;"]}
{"version":3,"sources":["../../server/controller/electionController.js"],"names":["adminModel","require","usersModel","tokenModel","companyModel","jwt","env","mongoose","encode","hashCode","generator","axios","value","passwordGenerated","adminController","login","req","res","next","body","password","credential","console","log","findOne","$and","phone_no","err","admin","json","d","Date","v","setMinutes","getMinutes","token1","sign","role","expiry","App_key","decoded","verify","sucess","data","isError","register","account_created","length","save","user","module","exports"],"mappings":"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","file":"electionController.js","sourcesContent":["var adminModel=require( '../models/adminModel')\r\nvar usersModel =require( './../models/usersModel');\r\nvar tokenModel =require( './../models/tokenModel');\r\nvar companyModel =require( '../models/companyModel');\r\nvar jwt =require( 'jsonwebtoken');\r\nvar env =require( \"../env\");\r\nvar mongoose = require('mongoose');\r\nvar encode = require('hashcode').hashCode;\r\nvar generator = require('generate-password');\r\nconst axios = require('axios');\r\n\r\nencode().value(passwordGenerated);\r\n\r\nconst adminController = {\r\n    \r\n    login: (req, res, next) => {\r\n        req.body.password = encode().value(req.body.password);\r\n        const credential = req.body;\r\n        console.log(\"admin Login Credential==>\",credential);\r\n        \r\n        adminModel.findOne({ $and: [ {phone_no: credential.phone_no }, { password: credential.password} ] }\r\n          , (err, admin) => {\r\n          if (err) res.json(err);\r\n          if (admin) {\r\n            console.log(\"admin=>\", admin)\r\n            var d = new Date();\r\n            var v = new Date();\r\n            v.setMinutes(d.getMinutes() + 10);\r\n            const token1 = jwt.sign({\r\n              phone_no:admin.phone_no,\r\n              role:'admin',\r\n              expiry: v\r\n            }, env.App_key);\r\n            var decoded = jwt.verify(token1, env.App_key);\r\n            console.log(\"decoded reqest from==>\", decoded.role)\r\n            res.json({\r\n              sucess: true,\r\n              data: token1,\r\n              })\r\n      \r\n          } \r\n          else {\r\n            // console.log(\"admin Login Error==>\",err,admin,adminModel);\r\n            \r\n            res.json({\r\n              isError: true,\r\n              data: \"Not a admin !\"\r\n            })\r\n          }\r\n        });\r\n    \r\n      },\r\n    register: (req, res, next) => {\r\n        console.log(\"admin  register\", req.body)\r\n        var account_created = new Date();\r\n        if (req.body.password != \"\" && req.body.password.length > 6) {\r\n          req.body.password = encode().value(req.body.password);\r\n          let admin = new adminModel(req.body);\r\n          req.body.account_created = account_created;\r\n    \r\n          console.log(\"Account Created==>\", account_created);\r\n          admin.save(req.body, function(err, user) {\r\n            if (err) return res.json({\r\n              isError: true,\r\n              data: err,\r\n              });\r\n              res.json({\r\n                sucess: true,\r\n                data: user,\r\n                })\r\n          })\r\n        } else {\r\n          res.json({\r\n            isError: true,\r\n            data: 'invalid Password',\r\n            })\r\n        }\r\n      },\r\n  \r\n};\r\n\r\nmodule.exports= adminController;"]}
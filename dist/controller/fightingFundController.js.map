{"version":3,"sources":["../../server/controller/fightingFundController.js"],"names":["usersModel","require","tokenModel","fightingFundModel","jwt","env","encode","hashCode","express","app","generator","axios","search","user","UserArray","console","log","i","length","EndTransaction","params","options","upsert","findOneAndUpdate","accountNo","$set","isTransaction","err","data","fightingFundController","createAccount","req","res","next","token1","body","authorization","decoded","verify","App_key","role","account_created","Date","passwordGenerated","generate","numbers","phone_no","userMsg","password","value","push","fightingFund","save","json","isError","get","trim","then","response","success","catch","error","getBalance","findOne","balance","_id","result","DepositsTransaction","find","$and","parseFloat","newAmt","userValid","newBalance","dateObj","month","getUTCMonth","day","getUTCDate","year","getUTCFullYear","newdate","dataObj","amt","oldBalance","date","query","update","$push","transaction","new","isFound","WithdrawalTransaction","module","exports"],"mappings":"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","file":"fightingFundController.js","sourcesContent":["var usersModel =require( './../models/usersModel');\r\nvar tokenModel =require( './../models/tokenModel');\r\nvar fightingFundModel=require('./../models/fightingFundModel')\r\n\r\nvar jwt =require( 'jsonwebtoken');\r\nvar env =require( \"../env\");\r\nvar encode = require('hashcode').hashCode;\r\n\r\nvar express =require( 'express');\r\nconst app = express();\r\nvar generator = require('generate-password');\r\nconst axios = require('axios');\r\nfunction search(user, UserArray){\r\n    console.log(\"Search Function==>\",user,UserArray);\r\n    for (let i=0; i < UserArray.length; i++) {\r\n        console.log(\"in for loop==>\",i,UserArray[i].user,user);\r\n        \r\n        if (UserArray[i].user== user) {\r\n            console.log(\"Search Function User Found==>\",user);\r\n          return true;\r\n            \r\n        }\r\n        if (i>UserArray.length) {\r\n            console.log(\"Search Function Not found==>\",user);\r\n            return false;\r\n          \r\n           \r\n        }\r\n        \r\n    }\r\n    console.log(\"for loop iteration\");\r\n    \r\n  }\r\n\r\n  function EndTransaction(params) {\r\n      \r\n    options = {upsert: true};\r\n    fightingFundModel.findOneAndUpdate({accountNo:params}, {$set:{isTransaction:false}}, options, function (err, data) {\r\n        if (err) {\r\n            console.log(\"EndTransaction end Error==>\",err);\r\n            \r\n          return false\r\n        }\r\n       else if (!data) {\r\n        console.log(\"EndTransaction end Error==>\",data);\r\n        return false\r\n        }\r\n        else{\r\n            console.log(\"EndTransaction sucess==>\",data);\r\n            return true\r\n        }\r\n        \r\n    });\r\n      \r\n  }\r\n\r\nconst fightingFundController = {\r\n  createAccount: (req, res, next) => {\r\n    var token1=  req.body.authorization;\r\n    var decoded = jwt.verify(token1, env.App_key);\r\n    console.log(\"decoded reqest from==>\", decoded.role)\r\n\r\n    if (decoded.role=='admin') {  \r\n\r\n         var account_created = new Date();\r\n         var passwordGenerated = generator.generate({\r\n            length: 6,\r\n            numbers: true\r\n          });\r\n      \r\n          var phone_no=req.body.phone_no;\r\n          var userMsg='Congrats you are Account '+ req.body.accountNo+' is created  successfully. Your password :'+passwordGenerated;\r\n        req.body.password = encode().value(passwordGenerated);\r\n        req.body.account_created = account_created\r\n        var user={\r\n            user:phone_no\r\n        }\r\n        req.body.user=[]\r\n        req.body.user.push(user)\r\n          console.log(\"req body for create account=\", req.body);\r\n          let fightingFund = new fightingFundModel(req.body);\r\n\r\n          fightingFund.save(req.body, function(err, fightingFund) {\r\n            if (err) return res.json({\r\n              isError: true,\r\n              data: err,\r\n              });\r\n             \r\n              else{\r\n                \r\n          axios.get('http://sms.swebsolutions.in/api/mt/SendSMS?user=WEBSOLUTION&password=swsmymv*13&senderid=SWSCOM&channel=Trans&DCS=0&flashsms=0&number='+ phone_no.trim() +'&text= '+ userMsg+'&route=6')\r\n          .then(response => {\r\n\r\n            res.json({\r\n                success: true,\r\n                data: fightingFund\r\n              });\r\n          })\r\n          .catch(error => {\r\n            res.json({\r\n           isError: true,\r\n           error: error\r\n         });\r\n          });\r\n\r\n              }\r\n          })\r\n\r\n        }\r\n        else{\r\n         res.json({\r\n           isError: true,\r\n           error: 'Unauthorized Access'\r\n         });\r\n        }\r\n  \r\n\r\n  },\r\n  getBalance:(req,res,next)=>{\r\n      console.log(\"get Balance==>\",req.body.accountNo);\r\n      var accountNo=req.body.accountNo;\r\n      \r\n      fightingFundModel.findOne({accountNo:accountNo},{balance:1,_id:0},function (err,result) {\r\n          if (err) {\r\n              res.json({\r\n                  isError:true,\r\n                  data:err\r\n              })\r\n              \r\n          } else {\r\n            res.json({\r\n                success:true,\r\n                data:result\r\n            })\r\n          }\r\n          \r\n      })\r\n   \r\n  },\r\n  DepositsTransaction:(req,res,next)=>{\r\n    console.log(\"DepositsTransaction \",req.body);\r\n\r\n    var user=req.body.user;\r\n    var accountNo=req.body.accountNo;\r\n    var decoded = jwt.verify(req.body.authorization, env.App_key);\r\n\r\n    var phone_no=decoded.phone_no;\r\n    req.body.password = encode().value(req.body.password);\r\n    console.log(\"phone_no==>\",phone_no,user);\r\n    \r\n    if(user==phone_no){\r\n\r\n        fightingFundModel.find({$and:[\r\n            {accountNo:accountNo},\r\n            {password:req.body.password}\r\n        ]},async  function  (err,result) {\r\n            if (err) {\r\n                res.json({\r\n                    isError:true,\r\n                    data:err\r\n                })\r\n                \r\n            } else {\r\n                console.log(\"Account found==>\",result);\r\n                if (result.length>0) {\r\n                    console.log(\"Result length GT 0\");\r\n                    \r\n                    var UserArray=result[0].user\r\n                    var balance=parseFloat(result[0].balance) ;\r\n                    var newAmt=parseFloat(req.body.newAmt)\r\n                    var userValid=await search(phone_no,UserArray);\r\n                         if (userValid) {\r\n                             console.log(\"ResPonse==>\",userValid);\r\n                                  \r\n                                console.log(\"USer valid\",userValid);         \r\n                                if (newAmt>0) {\r\n                                    console.log(\"newAmt\",newAmt);\r\n        \r\n                                    options = {upsert: true};\r\n                                    fightingFundModel.findOneAndUpdate({accountNo:accountNo}, {$set:{isTransaction:true}}, options, function (err, data) {\r\n                                        if (err) {\r\n                                            console.log(\"Set Transaction Error==>\");\r\n                                            \r\n                                            res.json({\r\n                                                isError:true,\r\n                                                data:err})\r\n                                        }\r\n                                       else if (!data) {\r\n                                        console.log(\"Set Transaction Not Data==>\",data);\r\n        \r\n                                            res.json({\r\n                                                isError:true,\r\n                                                data:err})\r\n                                        }\r\n                                        else{\r\n        \r\n                                            \r\n            \r\n                                    var newBalance=balance+newAmt;\r\n                                    console.log(\"DepositsTransaction==>  newBalance\",newBalance);\r\n            \r\n                                    var dateObj = new Date();\r\n                                    var month = dateObj.getUTCMonth() + 1; //months from 1-12\r\n                                    var day = dateObj.getUTCDate();\r\n                                    var year = dateObj.getUTCFullYear();\r\n            \r\n                                    var newdate = year + \"/\" + month + \"/\" + day;\r\n                               \r\n                                    var dataObj=\r\n                                    {\r\n                                        role:'deposit',\r\n                                        amt:newAmt,\r\n                                        user:user,\r\n                                        oldBalance:balance,\r\n                                        balance:newBalance,\r\n                                        date:dateObj\r\n                                \r\n                                    }\r\n                                    query = {'accountNo': accountNo},\r\n                                    update = {\r\n                                        $set: {balance: newBalance},\r\n                                        $push: {transaction: dataObj}\r\n                                    },\r\n                                    options = {upsert: true,new:true};\r\n                                    \r\n                                    fightingFundModel . findOneAndUpdate  (query, update, options,async function(err, data) {\r\n                                       \r\n                                            \r\n                                        if (err) {\r\n                                             res.json({\r\n                                              isError:true,\r\n                                              data:err})\r\n                                             \r\n                                          }\r\n                                          if (!data) {\r\n                                              \r\n                                    \r\n                                         res.json({\r\n                                                isError:true,\r\n                                                data:err}) \r\n                                          }\r\n                                          else{\r\n                                            res.json({\r\n                                                success:true,\r\n                                                data:data}) \r\n                                          }\r\n          \r\n                                      \r\n                                    });\r\n            \r\n                                          \r\n                                        }\r\n                                        \r\n                                    });\r\n            \r\n                                } else {\r\n                                    res.json({\r\n                                        isError:true,\r\n                                        data:\"Invalid Transaction\"\r\n                                    })\r\n                                    \r\n                                }\r\n                        \r\n                             \r\n                             \r\n                         } else {\r\n                            console.log(\"ResPonse Error==>\",userValid);\r\n                            res.json({\r\n                                isError:true,\r\n                                data:isFound\r\n                            \r\n                            })\r\n                         }\r\n                         \r\n                } else {\r\n                    console.log(\"Result length LT 0\",result);\r\n                    res.json({\r\n                        isError:true,\r\n                        data:\"Invalid Transaction\"\r\n                    })\r\n                    \r\n                }\r\n           \r\n                \r\n            }\r\n            \r\n        })\r\n     \r\n\r\n    }else{\r\n        res.json({\r\n            isError:true,\r\n            data:'Unauthorised Access'\r\n        })\r\n    }\r\n\r\n  },\r\n  WithdrawalTransaction:(req,res,next)=>{\r\n      console.log(\"WithdrawalTransaction \",req.body);\r\n      \r\n    var user=req.body.user;\r\n    var accountNo=req.body.accountNo;\r\n    var decoded = jwt.verify(req.body.authorization, env.App_key);\r\n\r\n    var phone_no=decoded.phone_no;\r\n    req.body.password = encode().value(req.body.password);\r\n\r\n    if(user==phone_no){\r\n\r\n        fightingFundModel.find({$and:[\r\n            {accountNo:accountNo},\r\n            {password:req.body.password}\r\n        ]\r\n                },async  function  (err,result) {\r\n            if (err) {\r\n                res.json({\r\n                    isError:true,\r\n                    data:err\r\n                })\r\n                \r\n            } else {\r\n\r\n                if (result.length>0) {\r\n                    console.log(\"Account found==>\",result[0]);\r\n                \r\n                    var UserArray=result[0].user\r\n                    var balance=parseFloat(result[0].balance) ;\r\n                    var newAmt=parseFloat(req.body.newAmt)\r\n                    var userValid=await search(phone_no,UserArray);\r\n               \r\n                    if (userValid) {\r\n                        if (((balance>0)&&(newAmt>0))&&(balance>=newAmt)) {\r\n                           \r\n    \r\n                            var newBalance=balance-newAmt;\r\n                         \r\n                            // result[0].balance=newBalance;\r\n                            // result[0].transaction=dataObj\r\n                            if (newBalance>=0) {\r\n                                options = {upsert: true,new:true};\r\n                                fightingFundModel.findOneAndUpdate({accountNo:accountNo}, {$set:{isTransaction:true}}, options, function (err, data) {\r\n                                    if (err) {\r\n                                        res.json({\r\n                                            isError:true,\r\n                                            data:err})\r\n                                    }\r\n                                   else if (!data) {\r\n                                        res.json({\r\n                                            isError:true,\r\n                                            data:err})\r\n                                    }\r\n                                    else{\r\n\r\n                                console.log(\"WithdrawalTransaction\",result[0],result[0].transaction);\r\n                                var dateObj = new Date();\r\n                                var month = dateObj.getUTCMonth() + 1; //months from 1-12\r\n                                var day = dateObj.getUTCDate();\r\n                                var year = dateObj.getUTCFullYear();\r\n        \r\n                                var newdate = year + \"/\" + month + \"/\" + day;\r\n                                \r\n                                var dataObj=\r\n                                {\r\n                                    role:'Withdraw',\r\n                                    amt:newAmt,\r\n                                    user:user,\r\n                                    oldBalance:balance,\r\n                                    balance:newBalance,\r\n                                    date:dateObj\r\n                              \r\n                                }\r\n        \r\n                                query = {'accountNo': accountNo},\r\n                                update = {\r\n                                    $set: {balance: newBalance},\r\n                                    $push: {transaction: dataObj}\r\n                                },\r\n                              \r\n                                fightingFundModel.findOneAndUpdate(query, update, options, function (err, data) {\r\n                                    if (err) {\r\n                                        res.json({\r\n                                            isError:true,\r\n                                            data:err})\r\n                                    }\r\n                                   else if (!data) {\r\n                                        res.json({\r\n                                            isError:true,\r\n                                            data:err})\r\n                                    }\r\n                                    else{\r\n                               \r\n                                        res.json({\r\n                                            success:true,\r\n                                            data:data})\r\n                                    }\r\n                                    \r\n                                });\r\n\r\n\r\n\r\n                                      \r\n                                    }\r\n                                    \r\n                                });\r\n\r\n\r\n        \r\n        \r\n                 \r\n                            }\r\n                            else{\r\n                                res.json({\r\n                                    isError:true,\r\n                                    data:'Transaction Failed'\r\n                                })\r\n                            }\r\n                             \r\n                        } else {\r\n                            res.json({\r\n                                isError:true,\r\n                                data:\"Invalid Transaction\"\r\n                            })\r\n                            \r\n                        }\r\n                \r\n                    } else {\r\n                        res.json({\r\n                            isError:true,\r\n                            data:\"Invalid Transaction\"\r\n                        })\r\n                    }\r\n                \r\n                    \r\n                } else {\r\n                    res.json({\r\n                        isError:true,\r\n                        data:\"Invalid Transaction\"\r\n                    })\r\n                }\r\n             \r\n                \r\n            }\r\n            \r\n        })\r\n     \r\n\r\n    }else{\r\n        res.json({\r\n            isError:true,\r\n            data:'Unauthorised Access'\r\n        })\r\n    }\r\n\r\n\r\n\r\n  }\r\n\r\n \r\n};\r\n\r\n\r\nmodule.exports= fightingFundController;"]}
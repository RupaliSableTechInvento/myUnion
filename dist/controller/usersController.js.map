{"version":3,"sources":["../../server/controller/usersController.js"],"names":["usersModel","require","companyModel","Common","messagesModel","userElectionModel","electionDetailsModel","postModel","jwt","env","nodemailer","mongoose","encode","hashCode","generator","axios","base64ToImage","path","search","election_name","candidate","supportArray","i","length","async","addSupport","ajax_data","mainCallback","results","id","_isValidCandidate","callback","console","log","find","_id","Types","ObjectId","err","userElection","_getDeptVoteCount","company_name","department_name","department","getDept","Object","keys","forEach","key","_validateVoting","user","deptData","deptDataOfVoting","assignDeptCount","voteCount","count","canVote","waterfall","demo","searchData","searchQuery","a","_checkSupportCount","b","_getAllMeeting","c","usersController","getAllMessagesWithFriend","req","res","next","decoded","verify","body","authorization","App_key","friend","query","data","date","temp","limit","$or","$and","sender","email","reciever","$lt","sort","exec","messages","json","isError","success","setMsgRead","arrMsgID","arrMsgIDList","map","aField","bulk","collection","initializeUnorderedBulkOp","item","index","updateOne","$set","isRead","execute","getFriendsList","users","getUserInfo","url","getAllCount","getAll","EditUserProfile","phone_no","dateOfBirth","Date","findOneAndUpdate","new","userProfile","findOne","tokenModel","tokenData","getOne","create","uploadProfilePhotoOld","base64Str","imageUrl","imageUrls","folderPath","join","__dirname","baseId","getAlphaNumericRandomString","optionalObj","imageInfo","push","fileName","imgURL","uploadProfilePhoto","dataObj","update","options","delete","isActive","ok","forgotPassword","result","passwordGenerated","generate","numbers","userName","full_name","userMsg","new_pasword","value","get","trim","then","response","nModified","catch","error","isVerified","token","emailVerification","host","headers","d","v","setMinutes","getMinutes","sign","exp","Math","floor","createTestAccount","account","transporter","createTransport","service","auth","pass","htmlforemail","mailOptions","from","to","subject","text","html","sendMail","info","messageId","getTestMessageUrl","emailVerified","params","dt","checkDate","redirect","varifyToken","changePassword","password","addCandidate","userQuery","empID","user_id","save","send","support","isAlreadyVote","q1","queryString","$not","$elemMatch","$inc","$push","upsert","electionDetails","candidateData","unSupport","$pull","addPost","postInfo","createdBy","isArray","imageUrlsArr","post","docs","getUserPost","module","exports"],"mappings":"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","file":"usersController.js","sourcesContent":["var usersModel =require( '../models/usersModel')\r\n// var tokenModel =require( './../models/tokenModel');\r\nvar companyModel =require( '../models/companyModel')\r\nvar Common = require('../common')\r\n\r\nvar messagesModel =require( '../models/messagesModel');\r\nvar userElectionModel =require('../models/userElectionModel')\r\nvar electionDetailsModel=require('../models/electionDetailsModel');\r\nvar postModel =require( '../models/postModel')\r\n// var postatrade =require( '../models/postatrade')\r\nvar jwt =require( 'jsonwebtoken');\r\nvar env =require( \"../env\");\r\nconst nodemailer = require('nodemailer');\r\nvar mongoose = require('mongoose');\r\nvar encode = require('hashcode').hashCode;\r\nvar encode = require('hashcode').hashCode;\r\nvar generator = require('generate-password');\r\nconst axios = require('axios');\r\nvar base64ToImage = require('base64-to-image');\r\nconst path = require('path')\r\nfunction search(election_name,candidate, supportArray){\r\n  for (var i=0; i < supportArray.length; i++) {\r\n      if ((supportArray[i].election_name === election_name)&&(supportArray[i].candidate === candidate)) {\r\n          return true;\r\n      }\r\n      if (i>supportArray.length) {\r\n\r\n         return false;\r\n      }\r\n      \r\n  }\r\n}\r\n\r\n\r\nconst async = require('async');\r\n\r\n\r\nfunction addSupport(ajax_data, mainCallback) {\r\n\r\n  var results = {};\r\n  var candidate=ajax_data.candidate;\r\n    var  id=ajax_data.id\r\n\r\n  function _isValidCandidate(callback) {\r\n    console.log(\"_isValidCandidate\");\r\n    \r\n     userElectionModel.find({ _id: mongoose.Types.ObjectId(candidate)},function (err,userElection) {\r\n       if (err) {\r\n         callback(err)\r\n       } else {\r\n         results.userElection=userElection\r\n         console.log(\"Result==>\",results);\r\n         \r\n         callback(null,results)\r\n       }\r\n     })\r\n\r\n  }\r\n\r\n  function _getDeptVoteCount(results, callback) {\r\n    var company_name=results.userElection[0].company_name;\r\n    var department_name=results.userElection[0].department_name;\r\n    console.log(\"company name and department==>\",company_name,department_name);\r\n    \r\n    companyModel.find(\r\n        {company_name:company_name},{department:1,_id:0},function(err, department) {\r\n      if (err) {\r\n        callback(err)\r\n      } else {\r\n        // console.log(\"_getDeptVoteCount==>\",department);\r\n        var getDept=department[0].department;\r\n        // console.log(\"Department==>\",getDept);\r\n        Object.keys(getDept).forEach(function(key) {\r\n          if (key==department_name) {\r\n            results.department = getDept[key];\r\n          }\r\n      });\r\n        callback(null, results)\r\n      }\r\n    })\r\n  }\r\n\r\n  function _validateVoting(results, callback) {\r\n    console.log(\"_validateVoting\",results);\r\n    usersModel.find({ _id: mongoose.Types.ObjectId(id)},function (err,user) {\r\n      if (err) {\r\n        callback(err)\r\n      } else {\r\n        \r\n        var deptData=user[0].deptDataOfVoting;\r\n        console.log(\"_validateVoting data==>\",user[0]);\r\n\r\n        var department_name=results.userElection[0].department_name;\r\n        var assignDeptCount=results.department.voteCount;\r\n\r\n        Object.keys(deptData).forEach(function(key) {\r\n          console.log(\"Object.keys(deptData)==>\",deptData);\r\n          \r\n          if (key==department_name) {\r\n            console.log(\"key matched\", deptData[key].count, key,department_name);\r\n            \r\n            if (deptData[key].count>=assignDeptCount) {\r\n              console.log(\"Voting Limit reached\",key,department_name);\r\n\r\n              results.canVote=false;\r\n              callback(null, results)\r\n              \r\n            } else {\r\n              results.canVote=true;\r\n              callback(null, results)\r\n              \r\n            }\r\n            \r\n          }\r\n      });\r\n\r\n\r\n\r\n\r\n        // callback(null,results)\r\n      }\r\n    })\r\n    \r\n   \r\n    \r\n  }\r\n\r\n  async.waterfall([\r\n    _isValidCandidate, _getDeptVoteCount, _validateVoting\r\n  ], function(err, results) {\r\n    if (err) {\r\n      console.log(\"maincallback Err=>\",err);\r\n      \r\n      mainCallback(err)\r\n    } else {\r\n      console.log(\"maincallback Results=>\",results);\r\n\r\n      mainCallback(null, results)\r\n    }\r\n  })\r\n}\r\n\r\n\r\n\r\nfunction demo(ajax_data, mainCallback) {\r\n  var searchData = 'search';\r\n  var searchQuery;\r\n  // searchData = Number(searchData);\r\n  // if (Number.isNaN(searchData)) {\r\n  //   searchData = '';\r\n  // }\r\n  if (searchData != '') {\r\n    console.log(\"SearchData for meeting\", searchData);\r\n    // var regexString = new RegExp('.*' + searchData + '.*', 'i');\r\n    // searchQuery = { meeting_no: { $regex: regexString } };\r\n\r\n  } else {\r\n    searchQuery = {};\r\n  }\r\n  // var meeting = Database.getCollection('meeting');\r\n  var results = {};\r\n\r\n  function _isValidCandidate(callback) {\r\n    console.log(\"_isValidCandidate\");\r\n    \r\n\r\n    var a=1;\r\n    if (!a) {\r\n      callback(err)\r\n    } else {\r\n      results.a = a\r\n      callback(null, results)\r\n      \r\n    }\r\n\r\n  }\r\n\r\n  function _checkSupportCount(results, callback) {\r\n    console.log(\"_checkSupportCount\",results);\r\n    \r\n \r\n    var b=1;\r\n    if (!b) {\r\n      callback(err)\r\n    } else {\r\n      results.b = b\r\n      callback(null, results)\r\n      \r\n    }\r\n  }\r\n\r\n  function _getAllMeeting(results, callback) {\r\n    console.log(\"_getAllMeeting\",results);\r\n    \r\n    var c=1;\r\n    if (!c) {\r\n      callback(err)\r\n    } else {\r\n      results.c = c\r\n      callback(null, results)\r\n      \r\n    }\r\n  }\r\n\r\n  async.waterfall([\r\n    _isValidCandidate, _checkSupportCount, _getAllMeeting\r\n  ], function(err, results) {\r\n    if (err) {\r\n      console.log(\"maincallback Err=>\",err);\r\n      \r\n      mainCallback(err)\r\n    } else {\r\n      console.log(\"maincallback Results=>\",results);\r\n\r\n      mainCallback(null, results)\r\n    }\r\n  })\r\n}\r\n\r\n\r\n\r\nconst usersController = {\r\n \r\n  getAllMessagesWithFriend: (req, res, next) => {\r\n\r\n    var decoded = jwt.verify(req.body.authorization, env.App_key);\r\n    // console.log(\"getAllMessagesWithFriend reqest from==>\", decoded.email, req.query.data)\r\n    var friend = req.query.data.friend;\r\n    var date = req.query.data.date;\r\n    var temp = req.query.data.limit;\r\n    var limit = '';\r\n    // var limit=parseInt(temp)\r\n    // if (temp && temp < 10) {\r\n    //   limit = temp\r\n    // } else {\r\n    //   limit = 10;\r\n    // }\r\n    var query = '';\r\n    if (date) {\r\n      query = {\r\n        $or: [\r\n          { $and: [{ sender: decoded.email }, { reciever: friend }] },\r\n          { $and: [{ sender: friend }, { reciever: decoded.email }] }\r\n        ],\r\n        \"date\": { $lt: date }\r\n      }\r\n    } else {\r\n      query = {\r\n        $or: [\r\n          { $and: [{ sender: decoded.email }, { reciever: friend }] },\r\n          { $and: [{ sender: friend }, { reciever: decoded.email }] }\r\n        ]\r\n      }\r\n    }\r\n\r\n\r\n\r\n    messagesModel.find(\r\n      query\r\n    ).sort({ 'date': -1 }).limit(10)\r\n\r\n\r\n    .exec(function(err, messages) {\r\n      if (err) return res.json({\r\n        isError: true,\r\n        data: err\r\n      });\r\n      res.json({\r\n        success: true,\r\n        data: messages\r\n      });\r\n    });\r\n\r\n  \r\n\r\n  },\r\n  setMsgRead: (req, res, next) => {\r\n    var arrMsgID = [];\r\n    arrMsgID = req.body.data;\r\n    console.log(\"arrMsgID\", arrMsgID);\r\n    var _id = '';\r\n    var arrMsgIDList = arrMsgID.map(function(aField) {\r\n        // return mongoose.Types.ObjectId(aField);\r\n        return aField\r\n      })\r\n    \r\n\r\n    var bulk = messagesModel.collection.initializeUnorderedBulkOp();\r\n\r\n    arrMsgID.forEach((item, index) => {\r\n      _id = mongoose.Types.ObjectId(item)\r\n        // var id = arrMsgID[index];\r\n      bulk.find({ _id: _id }).updateOne({ $set: { isRead: true } });\r\n\r\n    })\r\n    bulk.execute((err, messages) => {\r\n      if (err) return res.json({\r\n        isError: true,\r\n        data: err\r\n      });\r\n      res.json({\r\n        success: true,\r\n        data: messages\r\n      });\r\n    });\r\n\r\n  },\r\n  getFriendsList: (req, res, next) => {\r\n    var decoded = jwt.verify(req.body.authorization, env.App_key);\r\n    console.log(\"addUserInfo\", decoded.email)\r\n    usersModel.find({\r\n      'email': decoded.email\r\n    }, { \"friends\": 1, \"_id\": 0 }, (err, users) => {\r\n      if (err) return res.json({\r\n        isError: true,\r\n        data: err\r\n      });\r\n      res.json({\r\n        success: true,\r\n        data: users\r\n      });\r\n    });\r\n  },\r\n  getUserInfo: (req, res, next) => {\r\n    console.log(\"get USer Info call from frnt end\",req.url,req.body);\r\n    \r\n    var decoded = jwt.verify(req.body.authorization, env.App_key);\r\n    usersModel.find({\r\n      _id: decoded.id\r\n    }, (err, users) => {\r\n      if (err) return res.json({\r\n        isError: true,\r\n        data: err\r\n      });\r\n      res.json({\r\n        success: true,\r\n        data: users\r\n      });\r\n    });\r\n  },\r\n  getAllCount:(req,res,next)=>{\r\n    console.log(\"getAllUserCount==>\");\r\n    \r\n    var company_name=req.body.company_name;\r\n    var query={};\r\n    if (company_name) {\r\n      query={\r\n        'company_name':company_name\r\n      }\r\n      \r\n    }\r\n    else{\r\n      query={\r\n\r\n      }\r\n    }\r\n    usersModel.count(query,function (err,user) {\r\n        if (err) {\r\n            res.json({\r\n                isError:true,\r\n                data:err\r\n            })            \r\n        }\r\n        else{\r\n          console.log(\"company found==>\",user);\r\n          res.json({\r\n              success:true,\r\n              data:user\r\n          })\r\n        }\r\n        \r\n    })\r\n  },\r\n  getAll: async(req, res, next) => {\r\n    usersModel.find({}, (err, users) => {\r\n      if (err) return res.json({\r\n        isError: true,\r\n        data: err\r\n      });\r\n      res.json({\r\n        success: true,\r\n        data: users\r\n      });\r\n    });\r\n\r\n  },\r\n  EditUserProfile: async(req, res, next) => {\r\n    var decoded = jwt.verify(req.body.authorization, env.App_key);\r\n    console.log(\"Add User info for user==>\",decoded.phone_no);\r\n    \r\n      if (req.body.dateOfBirth) {\r\n        var dateOfBirth= new Date(req.body.dateOfBirth)\r\n        req.body.dateOfBirth=dateOfBirth;\r\n      }\r\n    usersModel.findOneAndUpdate({\r\n\r\n      _id: decoded.id\r\n    }, req.body, {\r\n      new: true\r\n    }, (err, user) => {\r\n      if (err) return res.json({\r\n        isError: true,\r\n        data: err\r\n      });\r\n      res.json({  \r\n        success: true,\r\n        data:req.body\r\n      })\r\n    });\r\n\r\n  },\r\n  userProfile: (req, res, next) => {\r\n    // var _id = Number(req.query.id);\r\n\r\n    var _id = mongoose.Types.ObjectId(req.query.id);\r\n    console.log(\"id=>\", _id);\r\n    usersModel.findOne({\r\n      _id: _id\r\n    }, (err, user) => {\r\n\r\n      if (err) {\r\n        res.json({\r\n          isError: true,\r\n          data: err\r\n        });\r\n      } else {\r\n        var email = user.email;\r\n        console.log(\"Email==>\", email);\r\n        tokenModel.findOne({ 'email': email }, (err, tokenData) => {\r\n          res.json({\r\n            success: true,\r\n            data: { user: user, tokenData: tokenData }\r\n          });\r\n        }).sort({ _id: -1 }).limit(1)\r\n\r\n      }\r\n    });\r\n  },\r\n  getOne: (req, res, next) => {\r\n    // console.log(\"------------\",next);\r\n    var decoded = jwt.verify(req.body.authorization, env.App_key);\r\n    usersModel.find({ _id: mongoose.Types.ObjectId(decoded.id)}, (err, user) => {\r\n      if (err) {\r\n        res.json({\r\n          isError: true,\r\n          data: err\r\n        });\r\n      } else {\r\n        res.json({\r\n          success: true,\r\n          data: user[0]\r\n        });\r\n      }\r\n    });\r\n  },\r\n  create: (req, res, next) => {\r\n    usersModel.create(req.body, function(err, user) {\r\n      if (err) return res.json({\r\n        isError: true,\r\n        data: err\r\n      });\r\n      res.json({\r\n        success: true,\r\n        data: user\r\n      })\r\n    })\r\n  },\r\n  uploadProfilePhotoOld: (req, res, next) => {\r\n    // var id = mongoose.Types.ObjectId(req.body.id);\r\n      var base64Str = req.body.imageUrl;\r\n      var decoded = jwt.verify(req.body.authorization, env.App_key);\r\n      if (base64Str) {\r\n        var imageUrls = [];\r\n        var folderPath = path.join(__dirname+'../../../', 'frontend', 'Images', '');\r\n        console.log(\"Folder path==>\",folderPath);\r\n        var baseId = Common.getAlphaNumericRandomString(6, '#a')\r\n        var optionalObj = { 'fileName': baseId, 'type': 'png' };\r\n        var imageInfo = base64ToImage(base64Str, folderPath, optionalObj);\r\n        imageUrls.push({ url: '/Images/_' + imageInfo.fileName, })\r\n        var query={\r\n          $set:{\r\n            imgURL : imageUrls,\r\n          } \r\n        }\r\n      usersModel.findOneAndUpdate({\r\n        _id: decoded.id\r\n      }, query, {\r\n        new: true\r\n      }, (err, user) => {\r\n        if (err) return res.json({\r\n          isError: true,\r\n          data: err\r\n        });\r\n        res.json({\r\n          success: true,\r\n          data: user\r\n        })\r\n      });\r\n      } else {\r\n        res.json({\r\n          isError: true,\r\n          data: 'Unable to upload'\r\n        })\r\n      }\r\n  },\r\n  uploadProfilePhoto: (req, res, next) => {\r\n    // var id = mongoose.Types.ObjectId(req.body.id);\r\n      var base64Str = req.body.imageUrl;\r\n      var decoded = jwt.verify(req.body.authorization, env.App_key);\r\n      console.log(\"Add User info for user==>\",decoded.phone_no);\r\n      if (base64Str) {\r\n        var dataObj={\r\n          imageUrl:base64Str,\r\n        }\r\n\r\n        query = {  _id: decoded.id},\r\n        update = {  \r\n          $set: { imgURL: base64Str } \r\n        },\r\n        options = {new: true};\r\n        usersModel.findOneAndUpdate(query,update,options\r\n       , (err, user) => {\r\n          if (err) return res.json({\r\n            isError: true,\r\n            data: err\r\n          });\r\n          res.json({  \r\n            success: true,\r\n            data:user\r\n          })\r\n        });\r\n      }\r\n      else{\r\n        res.json({\r\n          isError: true,\r\n          data: 'image url not found'\r\n        });\r\n      }\r\n     \r\n     \r\n  },\r\n  delete: (req, res, next) => {\r\n    var decoded = jwt.verify(req.body.authorization, env.App_key);\r\n    usersModel.findOneAndUpdate({\r\n      'email': decoded.email\r\n    }, {\r\n      isActive: 'inactive'\r\n    }, (err, ok) => {\r\n      if (err) return res.json({\r\n        isError: true,\r\n        data: err\r\n      });\r\n      else {\r\n        res.json({\r\n          success: true,\r\n          data: true\r\n        })\r\n      }\r\n    });\r\n  },\r\n  forgotPassword: (req, res, next) => {\r\n    var phone_no = req.body.phone_no;\r\n    console.log(\"forgot password password request==>\",phone_no);\r\n\r\n    usersModel.find({\r\n      'phone_no': req.body.phone_no\r\n    }, function(err, result) {\r\n      if (err) {\r\n        res.json({ \r\n          isError: true,\r\n          data: err\r\n        })\r\n      } else {\r\n        if (result != \"\") {\r\n          var passwordGenerated = generator.generate({\r\n            length: 6,\r\n            numbers: true\r\n          });\r\n          var userName=result[0].full_name\r\n          var userMsg='Hello '+userName+' ,your new account details are ,Mobile No: '+result[0].phone_no+' and password: '+passwordGenerated;\r\n          var new_pasword = encode().value(passwordGenerated);\r\n\r\n        \r\n          axios.get('http://sms.swebsolutions.in/api/mt/SendSMS?user=WEBSOLUTION&password=swsmymv*13&senderid=SWSCOM&channel=Trans&DCS=0&flashsms=0&number='+ phone_no.trim() +'&text= '+ userMsg+'&route=6')\r\n          .then(response => {\r\n\r\n            usersModel.update({\r\n              $and: [{ phone_no: phone_no  }]\r\n        \r\n            }, { $set: { \"password\":new_pasword } }, function(err, result) {\r\n              if (result.nModified) {\r\n\r\n                console.log(\"pasword modified-->\",result);\r\n                \r\n        \r\n                res.json({\r\n                  success: true,\r\n                  data: 'New password has been sent to your registerd No.'\r\n                });\r\n    \r\n\r\n              }\r\n            })\r\n           \r\n          \r\n\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          });\r\n\r\n\r\n        } else {\r\n          console.log(\"result==> phone no not found\",result);\r\n          \r\n          res.json({\r\n            isError: true,\r\n            data: 'sorry Not a registerd number'\r\n          });\r\n        }\r\n      }\r\n    })\r\n  },\r\n  isVerified: (req, res, next) => {\r\n    var decoded = jwt.verify(req.query.token, env.App_key);\r\n    usersModel.findOneAndUpdate({\r\n      'email': decoded.email\r\n    }, (err, user) => {\r\n      if (err) return res.json({\r\n        isError: true,\r\n        data: err\r\n      });\r\n      res.json({\r\n        success: true,\r\n        data: user\r\n      });\r\n    });\r\n\r\n  },\r\n  emailVerification: (req, res, next) => {\r\n    var host = req.headers.host;\r\n    var decoded = jwt.verify(req.body.authorization, env.App_key);\r\n    console.log(\"Emailverification==>\", decoded.email);\r\n    usersModel.find({\r\n      'email': decoded.email\r\n    }, function(err, result) {\r\n      if (err) {\r\n        res.json({\r\n          isError: true,\r\n          data: err\r\n        })\r\n      } else {\r\n        if (result != \"\") {\r\n          var d = new Date();\r\n          var v = new Date();\r\n          v.setMinutes(d.getMinutes() + 30);\r\n          const token = jwt.sign({\r\n            exp: Math.floor(v),\r\n            email: decoded.email,\r\n          }, env.App_key);\r\n          console.log(result);\r\n          nodemailer.createTestAccount((err, account) => {\r\n            // create reusable transporter object using the default SMTP transport\r\n            var transporter = nodemailer.createTransport({\r\n              service: 'gmail',\r\n              auth: {\r\n                user: 'itstechinvento@gmail.com',\r\n                pass: 'techinvento123'\r\n              }\r\n            });\r\n            var htmlforemail = ``;\r\n            let mailOptions = {\r\n              from: 'itstechinvento@gmail.com', // sender address\r\n              to: decoded.email, // list of receivers\r\n              subject: 'Email Verification', // Subject line\r\n              text: 'Please Click below link to Verify Your Email address', // plain text body\r\n              html: 'Please<a id =\"varified\"href=http://' + host + '/ev/' + token + '>Click Here to processed email verification</a>',\r\n            };\r\n            transporter.sendMail(mailOptions, (error, info) => {\r\n             \r\n              if (error) {\r\n                res.json({\r\n                  isError: true,\r\n                  data: error\r\n                });\r\n                return console.log(\"error--11--\", error);\r\n              } else {\r\n                console.log('Message sent: %s', info.messageId);\r\n                console.log('Preview URL: %s', nodemailer.getTestMessageUrl(info));\r\n                res.json({\r\n                  success: true,\r\n                  data: 'Please check your email'\r\n                });\r\n              }\r\n            });\r\n          });\r\n        } else {\r\n          res.json({\r\n            isError: true,\r\n            data: 'please provide a valid mail'\r\n          });\r\n        }\r\n      }\r\n    })\r\n  },\r\n  emailVerified: (req, res, next) => {\r\n    var decoded = jwt.verify(req.params.token, env.App_key);\r\n    var dt = new Date();\r\n    var checkDate = new Date(decoded.exp);\r\n    if (dt < checkDate) {\r\n      console.log(\"----------\");\r\n      usersModel.findOneAndUpdate({\r\n        \"email\": decoded.email\r\n      }, {\r\n        $set: {\r\n          \"verification.email_verified\": true\r\n        }\r\n      }, (err, user) => {\r\n        if (err) return res.json({\r\n          isError: true,\r\n          data: err\r\n        });\r\n        res.redirect('/#/profile');\r\n        // res.send('verified')\r\n        //res.json({ isError: false, data: \"your E-Mail address is verified sucessfully\" });\r\n\r\n      });\r\n    } else {\r\n      res.json({\r\n        isError: true,\r\n        data: \"session expire\"\r\n      });\r\n    }\r\n  },\r\n  varifyToken: (req, res, next) => {\r\n    console.log(\"in verify Token=>\");\r\n    var decoded = jwt.verify(req.params.token, env.App_key);\r\n    var dt = new Date();\r\n    var checkDate = new Date(decoded.exp);\r\n    if (dt < checkDate) {\r\n      console.log(\"----\");\r\n      var d = new Date();\r\n      var v = new Date();\r\n      v.setMinutes(d.getMinutes() + 60);\r\n      const token = jwt.sign({\r\n        exp: Math.floor(v),\r\n        email: decoded.email,\r\n      }, env.App_key);\r\n      res.redirect('/recover/' + token)\r\n    } else {\r\n      res.json({\r\n        isError: true,\r\n        data: \"session expire\"\r\n      });\r\n    }\r\n  },\r\n  changePassword: (req, res, next) => {\r\n    // console.log(\"req.headers--->\", req.body.authorization, req.body);\r\n    var decoded = jwt.verify(req.body.authorization, env.App_key);\r\n    console.log(\"change password request==>\",decoded.phone_no);\r\n    \r\n    req.body.password = encode().value(req.body.password);\r\n    req.body.new_pasword = encode().value(req.body.new_pasword);\r\n    usersModel.findOneAndUpdate({\r\n      $and: [{\r\n        password: req.body.password\r\n      }, {\r\n        _id: decoded.id\r\n      }]\r\n    }, {\r\n      $set: {\r\n        \"password\": req.body.new_pasword,\r\n      }\r\n    }, (err, user) => {\r\n      if (err) return res.json({\r\n        isError: true,\r\n        data: err\r\n      });\r\n      if(user){\r\n          res.json({\r\n            success: true,\r\n            data: \"Password has been Changed successfully\"\r\n          });\r\n          \r\n    \r\n      }\r\n      else{\r\n        res.json({\r\n          isError: true,\r\n          data: 'No Record Found'\r\n        });\r\n \r\n      }\r\n  \r\n    \r\n      console.log(\"user=>\", user);\r\n    })\r\n  },\r\n  addCandidate:(req,res,next)=>{\r\n    // console.log(\"addCandidate==>\",req.body);\r\n    var decoded = jwt.verify(req.body.authorization, env.App_key);\r\n\r\n    var phone_no=decoded.phone_no;\r\n    var userQuery={\r\n      $and: [{\r\n        phone_no:phone_no\r\n      }, {\r\n        company_name: req.body.company_name\r\n      },\r\n      {\r\n        department_name: req.body.department_name\r\n      }\r\n    ]\r\n    }\r\n\r\n    usersModel.find(userQuery\r\n    ,function (err,user) {\r\n      if (err) {\r\n        res.json({\r\n          isError:true,\r\n          data:err\r\n        });\r\n      \r\n      } else if(user.length){\r\n\r\n        var imageUrl=req.body.imageUrl\r\n        console.log(\"req body==>\",user);\r\n\r\n        var query={\r\n        }\r\n        req.body.phone_no=phone_no\r\n        req.body.empID=user[0].empID\r\n        req.body.user_id=decoded.id\r\n        // code to convert image\r\n        // if (imageUrl) {\r\n        //   var base64Str = req.body.imageUrl;\r\n        //   var imageUrls = [];\r\n        //   var folderPath = path.join(__dirname+'../../../', 'frontend', 'Images', '_');\r\n        //   console.log(\"Folder path==>\",folderPath);\r\n        //   var baseId = Common.getAlphaNumericRandomString(6, '#a')\r\n        //   var optionalObj = { 'fileName': baseId, 'type': 'png' };\r\n        //   var imageInfo = base64ToImage(base64Str, folderPath, optionalObj);\r\n        //   imageUrls.push({ url: '/Images/_' + imageInfo.fileName, })\r\n        //   req.body.imageUrl=imageUrls;\r\n        //   query=req.body;\r\n\r\n        // } else {\r\n        //   query=req.body\r\n        // }\r\n        query=req.body\r\n        console.log(\"user _id==>\", req.body.user_id);\r\n        \r\n        let userElection = new userElectionModel(query);\r\n        userElection.save(query, function(err, user) {\r\n          if (err) {\r\n            res.json({\r\n              isError:true,\r\n              data:err\r\n            });\r\n\r\n          }\r\n          else{\r\n            res.json({\r\n              success:true,\r\n              data:user\r\n            });\r\n          }\r\n        })\r\n        \r\n      }\r\n      else{\r\n        console.log(\"USer Not Found==>\",user);\r\n        \r\n        res.json({\r\n          isError:true,\r\n          data:err\r\n        });\r\n\r\n      }\r\n      \r\n    })\r\n  },\r\n  addSupport:(req,res,next)=>{\r\n    var decoded = jwt.verify(req.body.authorization, env.App_key);\r\n    console.log(\"add support request==>\",decoded.phone_no);\r\n    var candidate=req.body.candidate\r\n  \r\n    // candidate is candidate _id from userElection\r\n \r\n    userElectionModel.find({ _id: mongoose.Types.ObjectId(candidate)},function (err,userElection) {\r\n      if (err) {\r\n        res.json({\r\n          isError: true,\r\n          data: err\r\n        });\r\n      } else {\r\n\r\n        if (userElection.length>0) {\r\n          var election_name=userElection[0].election_name\r\n          var ajax_data = {\r\n            election_name:election_name,\r\n            candidate:req.body.candidate,\r\n            id:decoded.id\r\n          }\r\n          addSupport(ajax_data, function(err, data) {\r\n            if (err) {\r\n              res.send({ isError: true, data: err });\r\n            } else {\r\n              console.log(\"Addsupport ==>>\",data);\r\n              if (data.canVote==false) {\r\n                res.json({\r\n                  isError: true,\r\n                  data: 'Limit Reached'\r\n                });\r\n              \r\n              } else {\r\n                console.log(\"Valid Voting==>\",data.canVote);\r\n                \r\n              usersModel.find({ _id: mongoose.Types.ObjectId(decoded.id)},async function (err,result) {\r\n                if(err){\r\n                  res.json({\r\n                    isError: true,\r\n                    data: err\r\n                  });\r\n                }\r\n                else{\r\n                  var company_name=data.userElection[0].company_name;\r\n                  var department_name=data.userElection[0].department_name\r\n                  var supportArray=result[0].support\r\n                  var isAlreadyVote=await search(election_name,candidate, supportArray)\r\n\r\n                  if (await isAlreadyVote) {\r\n                    res.json({\r\n                      isError:true,\r\n                      data:'Invalid Attempt'\r\n                    })\r\n                    \r\n                  } else {    \r\n                  var dataObj={\r\n                    election_name:election_name,\r\n                    candidate:req.body.candidate,\r\n                    company_name:company_name,\r\n                    department_name:department_name,\r\n                    date:new Date()\r\n                  }\r\n                  var q1='deptDataOfVoting.'+department_name\r\n                var queryString=q1+'.count';\r\n                \r\n                  query = { $and:[\r\n                    { _id: mongoose.Types.ObjectId(decoded.id)},\r\n                    {\"support\":{ $not: {$elemMatch: { candidate} } }}\r\n                  ]},\r\n                  update = {\r\n                    $inc: { [queryString]: 1 } ,\r\n                    $push: { support: dataObj } \r\n                  },\r\n                  options = {upsert: true};\r\n                  \r\n                usersModel.findOneAndUpdate(\r\n                query,update,options\r\n              ,function (err,user) {\r\n                if (err) {\r\n                  res.json({\r\n                    isError: true,\r\n                    data: err\r\n                  });\r\n                  \r\n                } else {\r\n                  console.log(\"add support  result==>\",user);\r\n\r\n                  electionDetailsModel.find({ election_name:election_name},\r\n                    \r\n                    function (err,electionDetails) {\r\n                    if (err) {\r\n                      res.json({\r\n                        isError: true,\r\n                        data: err\r\n                      });\r\n                      \r\n                    } else {\r\n\r\n                      console.log(\"Election Details==>\",electionDetails);\r\n                    \r\n                      var candidateData= electionDetails[0].candidateData;\r\n                      candidateData.forEach((item, index) => {\r\n                        if (item.candidate == req.body.candidate) {\r\n                          electionDetailsModel.findOneAndUpdate(\r\n                        {\r\n                          $and:[\r\n                            { election_name:election_name},\r\n                            {[`candidateData.${index}.candidate`]: req.body.candidate}\r\n                          ]\r\n                        }, { $inc: { [`candidateData.${index}.support`]: 1 } },{new:true},function (err,result) {\r\n                          if (err) {\r\n                            res.json({\r\n                              isError: true,\r\n                              data: err\r\n                            });\r\n                          }\r\n                          else{\r\n                            console.log(\" support added result==>\",result);\r\n                \r\n                            res.json({\r\n                              success: true,\r\n                              data: result\r\n                            });\r\n                          }\r\n                          \r\n                        })\r\n\r\n                        }\r\n                      \r\n                    })\r\n                  }\r\n                    \r\n                  })\r\n\r\n                \r\n                }\r\n                \r\n              })\r\n\r\n                }\r\n                \r\n                }\r\n                \r\n              })\r\n              }\r\n            \r\n            }\r\n          })\r\n        }\r\n        else{\r\n          res.json({\r\n            isError: true,\r\n            data: 'Invalid Attempt'\r\n          });\r\n        }\r\n      }\r\n    })\r\n  },\r\n  unSupport:(req,res,next)=>{\r\n\r\n    var decoded = jwt.verify(req.body.authorization, env.App_key);\r\n    console.log(\"unSupport  request==>\",decoded.phone_no);\r\n\r\n    var candidate=req.body.candidate\r\n    userElectionModel.find({ _id: mongoose.Types.ObjectId(candidate)},function (err,userElection) {\r\n      if (err) {\r\n        res.json({\r\n          isError: true,\r\n          data: err\r\n        });\r\n      } else {\r\n\r\n        if (userElection.length>0) {\r\n          var election_name=userElection[0].election_name\r\n        \r\n          usersModel.find({ _id: mongoose.Types.ObjectId(decoded.id)},async function (err,result) {\r\n            if(err){\r\n              res.json({\r\n                isError: true,\r\n                data: err\r\n              });\r\n            }\r\n            else{\r\n          \r\n              var department_name=userElection[0].department_name\r\n              var supportArray=result[0].support\r\n              var isAlreadyVote=await search(election_name,candidate, supportArray)\r\n              console.log(\"|isAlreadyVote in unsupport==>\", await isAlreadyVote);\r\n             if (await !isAlreadyVote) {\r\n                res.json({\r\n                  isError:true,\r\n                  data:'Invalid Attempt'\r\n                })\r\n                \r\n              } else {\r\n            \r\n              var q1='deptDataOfVoting.'+department_name\r\n              var queryString=q1+'.count';\r\n                console.log(\"deptDataOfVoting==>\",queryString);\r\n                \r\n              query = { $and:[\r\n                { _id: mongoose.Types.ObjectId(decoded.id)},\r\n                {\"support\": {$elemMatch: { candidate} } }\r\n              ]},\r\n              update = {\r\n                $inc: { [queryString]: -1 } ,\r\n                $pull: { 'support': { candidate: candidate } } }\r\n              ,\r\n              // $pullAll: { support :{$elemMatch: {candidate: null } }}\r\n\r\n              options = {\r\n                upsert: true};\r\n              \r\n            usersModel.findOneAndUpdate(\r\n            query,update,options\r\n          ,function (err,user) {\r\n            if (err) {\r\n              res.json({\r\n                isError: true,\r\n                data: err\r\n              });\r\n              \r\n            } else {\r\n              console.log(\"Un support  result==>\",user);\r\n\r\n              electionDetailsModel.find({ election_name:election_name},\r\n                \r\n                function (err,electionDetails) {\r\n                if (err) {\r\n                  res.json({\r\n                    isError: true,\r\n                    data: err\r\n                  });\r\n                  \r\n                } else {\r\n\r\n                  console.log(\"Election Details==>\",electionDetails);\r\n                \r\n                  var candidateData= electionDetails[0].candidateData;\r\n                  candidateData.forEach((item, index) => {\r\n                    if (item.candidate == req.body.candidate) {\r\n                      electionDetailsModel.findOneAndUpdate(\r\n                    {\r\n                      $and:[\r\n                        { election_name:election_name},\r\n                        {[`candidateData.${index}.candidate`]: req.body.candidate}\r\n                      ]\r\n                    }, { $inc: { [`candidateData.${index}.support`]: -1 } },{new:true},function (err,result) {\r\n                      if (err) {\r\n                        res.json({\r\n                          isError: true,\r\n                          data: err\r\n                        });\r\n                      }\r\n                      else{\r\n                        console.log(\" Unsupport result==>\",result);\r\n            \r\n                        res.json({\r\n                          success: true,\r\n                          data: result\r\n                        });\r\n                      }\r\n                      \r\n                    })\r\n\r\n                    }\r\n                  \r\n                })\r\n              }\r\n                \r\n              })\r\n\r\n            \r\n            }\r\n            \r\n          })\r\n\r\n            }\r\n            \r\n            }\r\n            \r\n          })\r\n        \r\n        }\r\n        else{\r\n          res.json({\r\n            isError: true,\r\n            data: 'Invalid Attempt'\r\n          });\r\n        }\r\n      }\r\n    })\r\n\r\n\r\n  },\r\n  addPost:(req,res,next)=>{\r\n    var decoded = jwt.verify(req.body.authorization, env.App_key);\r\n    var query={\r\n      phone_no:decoded.phone_no\r\n    }\r\n    var imageUrls = [];\r\n    var postInfo={\r\n    }\r\n    var imageUrl=req.body.imageUrl\r\n    var createdBy={}\r\n    if (imageUrl.isArray) {\r\n      console.log(\"image url is an Array-==>\");\r\n      \r\n      for (var i = 0; i < imageUrl.length; i++) {\r\n        var baseId = Common.getAlphaNumericRandomString(6, '#a')\r\n        var base64Str = imageUrl[i];\r\n        // console.log(\"base 64==<\",base64Str,imageUrl);\r\n        \r\n        var folderPath = path.join(__dirname+'../../../', 'frontend', 'Images', '');\r\n        var optionalObj = { 'fileName': baseId, 'type': 'png' };\r\n        var imageInfo = base64ToImage(base64Str, folderPath, optionalObj);\r\n        imageUrls.push({ url: '/Images/_' + imageInfo.fileName})\r\n      }\r\n    }\r\n    else{\r\n      console.log(\"image url is  Not an Array-==>\");\r\n      var baseId = Common.getAlphaNumericRandomString(6, '#a')\r\n      var base64Str = imageUrl;\r\n      // console.log(\"base 64==<\",base64Str,imageUrl);\r\n      \r\n      var folderPath = path.join(__dirname+'../../../', 'frontend', 'Images', '');\r\n      var optionalObj = { 'fileName': baseId, 'type': 'png' };\r\n      var imageInfo = base64ToImage(base64Str, folderPath, optionalObj);\r\n      imageUrls.push({ url: '/Images/_' + imageInfo.fileName})\r\n    }\r\n    createdBy={\r\n    full_name:decoded.full_name,\r\n    phone_no:decoded.phone_no,\r\n    user_id:decoded.id\r\n    }\r\n    console.log(\"Post created by==>\",createdBy,decoded);\r\n    \r\n    postInfo.imageUrlsArr = imageUrls;\r\n    postInfo.post=req.body.post\r\n    postInfo.createdBy=createdBy\r\n    console.log(\"Post Info==>\",postInfo);\r\n    \r\n    let post= new postModel(postInfo)\r\n    post.save(postInfo,function (err,docs) {\r\n      if (err) {\r\n        return res.json({\r\n          isError:true,\r\n          data:err\r\n        })\r\n      } else {\r\n        res.json({\r\n          success:true,\r\n          data:'Post added successfully'\r\n        })\r\n      }\r\n      \r\n    })\r\n  },\r\n  getUserPost:(req,res,next)=>{  \r\n    user_id=req.body.user_id\r\n    console.log(\"getUserPost==>\",user_id);\r\n    \r\n    postModel.find({'createdBy.user_id':user_id},function (err,result) {\r\n      if (err) {\r\n        res.json({\r\n          isError:true,\r\n          data:err\r\n        })\r\n        \r\n      } else {\r\n        if (result.length) {\r\n          res.json({\r\n            success:true,\r\n            data:result\r\n          })\r\n        } else {\r\n          res.json({\r\n            isError:true,\r\n            data:'No post found'\r\n          })\r\n        }\r\n      \r\n        \r\n      }\r\n      \r\n    })\r\n\r\n  }\r\n};\r\n\r\nmodule.exports= usersController;"]}
{"version":3,"sources":["../../server/schema/users.js"],"names":["mongoose","require","uniqueValidator","autoIncrement","uniqueArrayPlugin","usersSchema","Schema","full_name","type","String","phone_no","required","dateOfBirth","Date","email","postInfo","Object","empID","company_name","department_name","refference_code","unique","isVote","Boolean","default","deptDataOfVoting","transactionApprove","password","isActive","imgURL","Array","account_created","verification","mobile_verified","support","plugin","index","module","exports"],"mappings":"AAAA,IAAIA,WAAUC,QAAS,UAAT,CAAd;AACA,IAAIC,kBAAiBD,QAAS,2BAAT,CAArB;AACA,IAAIE,gBAAeF,QAAS,yBAAT,CAAnB;AACA,MAAMG,oBAAoBH,QAAQ,uBAAR,CAA1B;;AAGA,MAAMI,cAAc,IAAIL,SAASM,MAAb,CAAoB;AACtCC,aAAW;AACTC,UAAMC;AADG,GAD2B;AAItCC,YAAU;AACRF,UAAMC,MADE;AAERE,cAAU;AAFF,GAJ4B;AAQtCC,eAAY;AACVJ,UAAKK;AADK,GAR0B;AAWxCC,SAAM;AACJN,UAAMC;AADF,GAXkC;AAcxCM,YAAS;AACTP,UAAKQ;AADI,GAd+B;AAiBtCC,SAAO;AACLT,UAAMC,MADD;AAELE,cAAU;AAFL,GAjB+B;AAqBtCO,gBAAa;AACXV,UAAMC,MADK;AAEXE,cAAU;AAFC,GArByB;AAyBtCQ,mBAAgB;AACdX,UAAMC,MADQ;AAEdE,cAAU;AAFI,GAzBsB;AA6BtCS,mBAAgB;AACdZ,UAAKC,MADS;AAEdY,YAAQ,IAFM;AAGdV,cAAU;AAHI,GA7BsB;AAkCtCW,UAAO;AACLd,UAAKe,OADA;AAELC,aAAQ;AAFH,GAlC+B;AAsCtCC,oBAAiB;AACfjB,UAAKQ,MADU;AAEfL,cAAS;AAFM,GAtCqB;;AA2CtCe,sBAAmB;AACjBlB,UAAKe,OADY;AAEjBC,aAAQ;AAFS,GA3CmB;AA+CtCG,YAAU;AACRnB,UAAMC,MADE;AAERE,cAAU;AAFF,GA/C4B;AAmDtCiB,YAAU;AACRpB,UAAMC,MADE;AAERe,aAAS;AAFD,GAnD4B;AAuDtC;AACA;AACA;AACA;AACA;AACAK,UAAQ;AACNrB,UAAMsB,KADA;AAENN,aAAQ;AACR;AAHM,GA5D8B;AAiEtCO,mBAAiB;AACfvB,UAAMK,IADS;AAEfW,aAAS,IAAIX,IAAJ;AAFM,GAjEqB;;AAsEtCmB,gBAAc;AACZC,qBAAiB;AACfzB,YAAMe,OADS;AAEfC,eAAS;AAFM;AADL,GAtEwB;AA4EtCU,WAAQ;AACN1B,UAAKsB;;AADC;;AA5E8B,CAApB,CAApB;;AAmFAzB,YAAY8B,MAAZ,CAAmBjC,eAAnB;AACAG,YAAY+B,KAAZ,CAAkB,EAAElB,cAAc,CAAhB,EAAmBD,OAAO,CAA1B,EAA4BP,UAAS,CAArC,EAAlB,EAA2D,EAAEW,QAAQ,IAAV,EAA3D;;AAEA;;AAEAgB,OAAOC,OAAP,GAAgBjC,WAAhB","file":"users.js","sourcesContent":["var mongoose =require( 'mongoose');\r\nvar uniqueValidator =require( 'mongoose-unique-validator');\r\nvar autoIncrement =require( \"mongoose-auto-increment\");\r\nconst uniqueArrayPlugin = require('mongoose-unique-array');\r\n\r\n\r\nconst usersSchema = new mongoose.Schema({\r\n  full_name: {\r\n    type: String,\r\n  },\r\n  phone_no: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  dateOfBirth:{\r\n    type:Date,\r\n},\r\nemail:{\r\n  type: String,\r\n},\r\npostInfo:{\r\ntype:Object\r\n},\r\n  empID: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  company_name:{\r\n    type: String,\r\n    required: true\r\n  },\r\n  department_name:{\r\n    type: String,\r\n    required: true\r\n  },\r\n  refference_code:{\r\n    type:String,\r\n    unique: true,\r\n    required: true\r\n  },\r\n  isVote:{\r\n    type:Boolean,\r\n    default:false\r\n  },\r\n  deptDataOfVoting:{\r\n    type:Object,\r\n    required:true,  \r\n  },\r\n \r\n  transactionApprove:{\r\n    type:Boolean,\r\n    default:false\r\n  },\r\n  password: {\r\n    type: String,\r\n    required: true\r\n  },\r\n  isActive: {\r\n    type: String,\r\n    default: 'active'\r\n  },\r\n  // imgURL: {\r\n  //   type: String,\r\n  //   default:null\r\n  //   // default: \"../../assets/app/media/img/users/userProfileNew.png\"\r\n  // },\r\n  imgURL: {\r\n    type: Array,\r\n    default:null\r\n    // default: \"../../assets/app/media/img/users/userProfileNew.png\"\r\n  },\r\n  account_created: {\r\n    type: Date,\r\n    default: new Date(),\r\n  },\r\n\r\n  verification: {  \r\n    mobile_verified: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n  },\r\n  support:{\r\n    type:Array,\r\n \r\n  }\r\n\r\n});\r\n\r\nusersSchema.plugin(uniqueValidator);\r\nusersSchema.index({ company_name: 1, empID: 1,phone_no:1}, { unique: true });\r\n\r\n// usersSchema.plugin(autoIncrement.plugin, 'id');\r\n\r\nmodule.exports= usersSchema;"]}